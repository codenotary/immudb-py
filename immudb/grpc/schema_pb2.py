# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: schema.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0cschema.proto\x12\rimmudb.schema\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\"\x12\n\x03Key\x12\x0b\n\x03key\x18\x01 \x01(\x0c\"2\n\nPermission\x12\x10\n\x08\x64\x61tabase\x18\x01 \x01(\t\x12\x12\n\npermission\x18\x02 \x01(\r\"z\n\x04User\x12\x0c\n\x04user\x18\x01 \x01(\x0c\x12.\n\x0bpermissions\x18\x03 \x03(\x0b\x32\x19.immudb.schema.Permission\x12\x11\n\tcreatedby\x18\x04 \x01(\t\x12\x11\n\tcreatedat\x18\x05 \x01(\t\x12\x0e\n\x06\x61\x63tive\x18\x06 \x01(\x08\".\n\x08UserList\x12\"\n\x05users\x18\x01 \x03(\x0b\x32\x13.immudb.schema.User\"Y\n\x11\x43reateUserRequest\x12\x0c\n\x04user\x18\x01 \x01(\x0c\x12\x10\n\x08password\x18\x02 \x01(\x0c\x12\x12\n\npermission\x18\x03 \x01(\r\x12\x10\n\x08\x64\x61tabase\x18\x04 \x01(\t\"\x1b\n\x0bUserRequest\x12\x0c\n\x04user\x18\x01 \x01(\x0c\"O\n\x15\x43hangePasswordRequest\x12\x0c\n\x04user\x18\x01 \x01(\x0c\x12\x13\n\x0boldPassword\x18\x02 \x01(\x0c\x12\x13\n\x0bnewPassword\x18\x03 \x01(\x0c\".\n\x0cLoginRequest\x12\x0c\n\x04user\x18\x01 \x01(\x0c\x12\x10\n\x08password\x18\x02 \x01(\x0c\"/\n\rLoginResponse\x12\r\n\x05token\x18\x01 \x01(\t\x12\x0f\n\x07warning\x18\x02 \x01(\x0c\"\x1a\n\nAuthConfig\x12\x0c\n\x04kind\x18\x01 \x01(\r\"\x1d\n\nMTLSConfig\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\"N\n\x12OpenSessionRequest\x12\x10\n\x08username\x18\x01 \x01(\x0c\x12\x10\n\x08password\x18\x02 \x01(\x0c\x12\x14\n\x0c\x64\x61tabaseName\x18\x03 \x01(\t\"<\n\x13OpenSessionResponse\x12\x11\n\tsessionID\x18\x01 \x01(\t\x12\x12\n\nserverUUID\x18\x02 \x01(\t\"\xb5\x03\n\x0cPrecondition\x12L\n\x0ckeyMustExist\x18\x01 \x01(\x0b\x32\x34.immudb.schema.Precondition.KeyMustExistPreconditionH\x00\x12R\n\x0fkeyMustNotExist\x18\x02 \x01(\x0b\x32\x37.immudb.schema.Precondition.KeyMustNotExistPreconditionH\x00\x12^\n\x15keyNotModifiedAfterTX\x18\x03 \x01(\x0b\x32=.immudb.schema.Precondition.KeyNotModifiedAfterTXPreconditionH\x00\x1a\'\n\x18KeyMustExistPrecondition\x12\x0b\n\x03key\x18\x01 \x01(\x0c\x1a*\n\x1bKeyMustNotExistPrecondition\x12\x0b\n\x03key\x18\x01 \x01(\x0c\x1a>\n!KeyNotModifiedAfterTXPrecondition\x12\x0b\n\x03key\x18\x01 \x01(\x0c\x12\x0c\n\x04txID\x18\x02 \x01(\x04\x42\x0e\n\x0cprecondition\"S\n\x08KeyValue\x12\x0b\n\x03key\x18\x01 \x01(\x0c\x12\r\n\x05value\x18\x02 \x01(\x0c\x12+\n\x08metadata\x18\x03 \x01(\x0b\x32\x19.immudb.schema.KVMetadata\"\xaf\x01\n\x05\x45ntry\x12\n\n\x02tx\x18\x01 \x01(\x04\x12\x0b\n\x03key\x18\x02 \x01(\x0c\x12\r\n\x05value\x18\x03 \x01(\x0c\x12.\n\x0creferencedBy\x18\x04 \x01(\x0b\x32\x18.immudb.schema.Reference\x12+\n\x08metadata\x18\x05 \x01(\x0b\x32\x19.immudb.schema.KVMetadata\x12\x0f\n\x07\x65xpired\x18\x06 \x01(\x08\x12\x10\n\x08revision\x18\x07 \x01(\x04\"q\n\tReference\x12\n\n\x02tx\x18\x01 \x01(\x04\x12\x0b\n\x03key\x18\x02 \x01(\x0c\x12\x0c\n\x04\x61tTx\x18\x03 \x01(\x04\x12+\n\x08metadata\x18\x04 \x01(\x0b\x32\x19.immudb.schema.KVMetadata\x12\x10\n\x08revision\x18\x05 \x01(\x04\"\x94\x01\n\x02Op\x12%\n\x02kv\x18\x01 \x01(\x0b\x32\x17.immudb.schema.KeyValueH\x00\x12*\n\x04zAdd\x18\x02 \x01(\x0b\x32\x1a.immudb.schema.ZAddRequestH\x00\x12.\n\x03ref\x18\x03 \x01(\x0b\x32\x1f.immudb.schema.ReferenceRequestH\x00\x42\x0b\n\toperation\"{\n\x0e\x45xecAllRequest\x12%\n\nOperations\x18\x01 \x03(\x0b\x32\x11.immudb.schema.Op\x12\x0e\n\x06noWait\x18\x02 \x01(\x08\x12\x32\n\rpreconditions\x18\x03 \x03(\x0b\x32\x1b.immudb.schema.Precondition\"0\n\x07\x45ntries\x12%\n\x07\x65ntries\x18\x01 \x03(\x0b\x32\x14.immudb.schema.Entry\"d\n\x06ZEntry\x12\x0b\n\x03set\x18\x01 \x01(\x0c\x12\x0b\n\x03key\x18\x02 \x01(\x0c\x12#\n\x05\x65ntry\x18\x03 \x01(\x0b\x32\x14.immudb.schema.Entry\x12\r\n\x05score\x18\x04 \x01(\x01\x12\x0c\n\x04\x61tTx\x18\x05 \x01(\x04\"2\n\x08ZEntries\x12&\n\x07\x65ntries\x18\x01 \x03(\x0b\x32\x15.immudb.schema.ZEntry\"\xb9\x01\n\x0bScanRequest\x12\x0f\n\x07seekKey\x18\x01 \x01(\x0c\x12\x0e\n\x06\x65ndKey\x18\x07 \x01(\x0c\x12\x0e\n\x06prefix\x18\x02 \x01(\x0c\x12\x0c\n\x04\x64\x65sc\x18\x03 \x01(\x08\x12\r\n\x05limit\x18\x04 \x01(\x04\x12\x0f\n\x07sinceTx\x18\x05 \x01(\x04\x12\x0e\n\x06noWait\x18\x06 \x01(\x08\x12\x15\n\rinclusiveSeek\x18\x08 \x01(\x08\x12\x14\n\x0cinclusiveEnd\x18\t \x01(\x08\x12\x0e\n\x06offset\x18\n \x01(\x04\"\x1b\n\tKeyPrefix\x12\x0e\n\x06prefix\x18\x01 \x01(\x0c\"\x1b\n\nEntryCount\x12\r\n\x05\x63ount\x18\x01 \x01(\x04\"1\n\tSignature\x12\x11\n\tpublicKey\x18\x01 \x01(\x0c\x12\x11\n\tsignature\x18\x02 \x01(\x0c\"\xaf\x01\n\x08TxHeader\x12\n\n\x02id\x18\x01 \x01(\x04\x12\x0f\n\x07prevAlh\x18\x02 \x01(\x0c\x12\n\n\x02ts\x18\x03 \x01(\x03\x12\x10\n\x08nentries\x18\x04 \x01(\x05\x12\n\n\x02\x65H\x18\x05 \x01(\x0c\x12\x0e\n\x06\x62lTxId\x18\x06 \x01(\x04\x12\x0e\n\x06\x62lRoot\x18\x07 \x01(\x0c\x12\x0f\n\x07version\x18\x08 \x01(\x05\x12+\n\x08metadata\x18\t \x01(\x0b\x32\x19.immudb.schema.TxMetadata\"\x0c\n\nTxMetadata\"D\n\x0bLinearProof\x12\x12\n\nsourceTxId\x18\x01 \x01(\x04\x12\x12\n\nTargetTxId\x18\x02 \x01(\x04\x12\r\n\x05terms\x18\x03 \x03(\x0c\"\x83\x02\n\tDualProof\x12/\n\x0esourceTxHeader\x18\x01 \x01(\x0b\x32\x17.immudb.schema.TxHeader\x12/\n\x0etargetTxHeader\x18\x02 \x01(\x0b\x32\x17.immudb.schema.TxHeader\x12\x16\n\x0einclusionProof\x18\x03 \x03(\x0c\x12\x18\n\x10\x63onsistencyProof\x18\x04 \x03(\x0c\x12\x15\n\rtargetBlTxAlh\x18\x05 \x01(\x0c\x12\x1a\n\x12lastInclusionProof\x18\x06 \x03(\x0c\x12/\n\x0blinearProof\x18\x07 \x01(\x0b\x32\x1a.immudb.schema.LinearProof\"\xa8\x01\n\x02Tx\x12\'\n\x06header\x18\x01 \x01(\x0b\x32\x17.immudb.schema.TxHeader\x12\'\n\x07\x65ntries\x18\x02 \x03(\x0b\x32\x16.immudb.schema.TxEntry\x12\'\n\tkvEntries\x18\x03 \x03(\x0b\x32\x14.immudb.schema.Entry\x12\'\n\x08zEntries\x18\x04 \x03(\x0b\x32\x15.immudb.schema.ZEntry\"p\n\x07TxEntry\x12\x0b\n\x03key\x18\x01 \x01(\x0c\x12\x0e\n\x06hValue\x18\x02 \x01(\x0c\x12\x0c\n\x04vLen\x18\x03 \x01(\x05\x12+\n\x08metadata\x18\x04 \x01(\x0b\x32\x19.immudb.schema.KVMetadata\x12\r\n\x05value\x18\x05 \x01(\x0c\"b\n\nKVMetadata\x12\x0f\n\x07\x64\x65leted\x18\x01 \x01(\x08\x12-\n\nexpiration\x18\x02 \x01(\x0b\x32\x19.immudb.schema.Expiration\x12\x14\n\x0cnonIndexable\x18\x03 \x01(\x08\"\x1f\n\nExpiration\x12\x11\n\texpiresAt\x18\x01 \x01(\x03\"\x87\x01\n\x0cVerifiableTx\x12\x1d\n\x02tx\x18\x01 \x01(\x0b\x32\x11.immudb.schema.Tx\x12+\n\tdualProof\x18\x02 \x01(\x0b\x32\x18.immudb.schema.DualProof\x12+\n\tsignature\x18\x03 \x01(\x0b\x32\x18.immudb.schema.Signature\"\xa0\x01\n\x0fVerifiableEntry\x12#\n\x05\x65ntry\x18\x01 \x01(\x0b\x32\x14.immudb.schema.Entry\x12\x31\n\x0cverifiableTx\x18\x02 \x01(\x0b\x32\x1b.immudb.schema.VerifiableTx\x12\x35\n\x0einclusionProof\x18\x03 \x01(\x0b\x32\x1d.immudb.schema.InclusionProof\"<\n\x0eInclusionProof\x12\x0c\n\x04leaf\x18\x01 \x01(\x05\x12\r\n\x05width\x18\x02 \x01(\x05\x12\r\n\x05terms\x18\x03 \x03(\x0c\"v\n\nSetRequest\x12$\n\x03KVs\x18\x01 \x03(\x0b\x32\x17.immudb.schema.KeyValue\x12\x0e\n\x06noWait\x18\x02 \x01(\x08\x12\x32\n\rpreconditions\x18\x03 \x03(\x0b\x32\x1b.immudb.schema.Precondition\"\\\n\nKeyRequest\x12\x0b\n\x03key\x18\x01 \x01(\x0c\x12\x0c\n\x04\x61tTx\x18\x02 \x01(\x04\x12\x0f\n\x07sinceTx\x18\x03 \x01(\x04\x12\x0e\n\x06noWait\x18\x04 \x01(\x08\x12\x12\n\natRevision\x18\x05 \x01(\x03\"/\n\x0eKeyListRequest\x12\x0c\n\x04keys\x18\x01 \x03(\x0c\x12\x0f\n\x07sinceTx\x18\x02 \x01(\x04\"B\n\x11\x44\x65leteKeysRequest\x12\x0c\n\x04keys\x18\x01 \x03(\x0c\x12\x0f\n\x07sinceTx\x18\x02 \x01(\x04\x12\x0e\n\x06noWait\x18\x03 \x01(\x08\"[\n\x14VerifiableSetRequest\x12-\n\nsetRequest\x18\x01 \x01(\x0b\x32\x19.immudb.schema.SetRequest\x12\x14\n\x0cproveSinceTx\x18\x02 \x01(\x04\"[\n\x14VerifiableGetRequest\x12-\n\nkeyRequest\x18\x01 \x01(\x0b\x32\x19.immudb.schema.KeyRequest\x12\x14\n\x0cproveSinceTx\x18\x02 \x01(\x04\"\x13\n\x11ServerInfoRequest\"%\n\x12ServerInfoResponse\x12\x0f\n\x07version\x18\x01 \x01(\t\"1\n\x0eHealthResponse\x12\x0e\n\x06status\x18\x01 \x01(\x08\x12\x0f\n\x07version\x18\x02 \x01(\t\"Q\n\x16\x44\x61tabaseHealthResponse\x12\x17\n\x0fpendingRequests\x18\x01 \x01(\r\x12\x1e\n\x16lastRequestCompletedAt\x18\x02 \x01(\x03\"g\n\x0eImmutableState\x12\n\n\x02\x64\x62\x18\x01 \x01(\t\x12\x0c\n\x04txId\x18\x02 \x01(\x04\x12\x0e\n\x06txHash\x18\x03 \x01(\x0c\x12+\n\tsignature\x18\x04 \x01(\x0b\x32\x18.immudb.schema.Signature\"\x9a\x01\n\x10ReferenceRequest\x12\x0b\n\x03key\x18\x01 \x01(\x0c\x12\x15\n\rreferencedKey\x18\x02 \x01(\x0c\x12\x0c\n\x04\x61tTx\x18\x03 \x01(\x04\x12\x10\n\x08\x62oundRef\x18\x04 \x01(\x08\x12\x0e\n\x06noWait\x18\x05 \x01(\x08\x12\x32\n\rpreconditions\x18\x06 \x03(\x0b\x32\x1b.immudb.schema.Precondition\"m\n\x1aVerifiableReferenceRequest\x12\x39\n\x10referenceRequest\x18\x01 \x01(\x0b\x32\x1f.immudb.schema.ReferenceRequest\x12\x14\n\x0cproveSinceTx\x18\x02 \x01(\x04\"f\n\x0bZAddRequest\x12\x0b\n\x03set\x18\x01 \x01(\x0c\x12\r\n\x05score\x18\x02 \x01(\x01\x12\x0b\n\x03key\x18\x03 \x01(\x0c\x12\x0c\n\x04\x61tTx\x18\x04 \x01(\x04\x12\x10\n\x08\x62oundRef\x18\x05 \x01(\x08\x12\x0e\n\x06noWait\x18\x06 \x01(\x08\"\x16\n\x05Score\x12\r\n\x05score\x18\x01 \x01(\x01\"\x86\x02\n\x0cZScanRequest\x12\x0b\n\x03set\x18\x01 \x01(\x0c\x12\x0f\n\x07seekKey\x18\x02 \x01(\x0c\x12\x11\n\tseekScore\x18\x03 \x01(\x01\x12\x10\n\x08seekAtTx\x18\x04 \x01(\x04\x12\x15\n\rinclusiveSeek\x18\x05 \x01(\x08\x12\r\n\x05limit\x18\x06 \x01(\x04\x12\x0c\n\x04\x64\x65sc\x18\x07 \x01(\x08\x12&\n\x08minScore\x18\x08 \x01(\x0b\x32\x14.immudb.schema.Score\x12&\n\x08maxScore\x18\t \x01(\x0b\x32\x14.immudb.schema.Score\x12\x0f\n\x07sinceTx\x18\n \x01(\x04\x12\x0e\n\x06noWait\x18\x0b \x01(\x08\x12\x0e\n\x06offset\x18\x0c \x01(\x04\"[\n\x0eHistoryRequest\x12\x0b\n\x03key\x18\x01 \x01(\x0c\x12\x0e\n\x06offset\x18\x02 \x01(\x04\x12\r\n\x05limit\x18\x03 \x01(\x05\x12\x0c\n\x04\x64\x65sc\x18\x04 \x01(\x08\x12\x0f\n\x07sinceTx\x18\x05 \x01(\x04\"^\n\x15VerifiableZAddRequest\x12/\n\x0bzAddRequest\x18\x01 \x01(\x0b\x32\x1a.immudb.schema.ZAddRequest\x12\x14\n\x0cproveSinceTx\x18\x02 \x01(\x04\"\x8b\x01\n\tTxRequest\x12\n\n\x02tx\x18\x01 \x01(\x04\x12/\n\x0b\x65ntriesSpec\x18\x02 \x01(\x0b\x32\x1a.immudb.schema.EntriesSpec\x12\x0f\n\x07sinceTx\x18\x03 \x01(\x04\x12\x0e\n\x06noWait\x18\x04 \x01(\x08\x12 \n\x18keepReferencesUnresolved\x18\x05 \x01(\x08\"\xac\x01\n\x0b\x45ntriesSpec\x12\x33\n\rkvEntriesSpec\x18\x01 \x01(\x0b\x32\x1c.immudb.schema.EntryTypeSpec\x12\x32\n\x0czEntriesSpec\x18\x02 \x01(\x0b\x32\x1c.immudb.schema.EntryTypeSpec\x12\x34\n\x0esqlEntriesSpec\x18\x03 \x01(\x0b\x32\x1c.immudb.schema.EntryTypeSpec\"?\n\rEntryTypeSpec\x12.\n\x06\x61\x63tion\x18\x01 \x01(\x0e\x32\x1e.immudb.schema.EntryTypeAction\"\xab\x01\n\x13VerifiableTxRequest\x12\n\n\x02tx\x18\x01 \x01(\x04\x12\x14\n\x0cproveSinceTx\x18\x02 \x01(\x04\x12/\n\x0b\x65ntriesSpec\x18\x03 \x01(\x0b\x32\x1a.immudb.schema.EntriesSpec\x12\x0f\n\x07sinceTx\x18\x04 \x01(\x04\x12\x0e\n\x06noWait\x18\x05 \x01(\x08\x12 \n\x18keepReferencesUnresolved\x18\x06 \x01(\x08\"\x91\x01\n\rTxScanRequest\x12\x11\n\tinitialTx\x18\x01 \x01(\x04\x12\r\n\x05limit\x18\x02 \x01(\r\x12\x0c\n\x04\x64\x65sc\x18\x03 \x01(\x08\x12/\n\x0b\x65ntriesSpec\x18\x04 \x01(\x0b\x32\x1a.immudb.schema.EntriesSpec\x12\x0f\n\x07sinceTx\x18\x05 \x01(\x04\x12\x0e\n\x06noWait\x18\x06 \x01(\x08\"(\n\x06TxList\x12\x1e\n\x03txs\x18\x01 \x03(\x0b\x32\x11.immudb.schema.Tx\"\x1d\n\x0f\x45xportTxRequest\x12\n\n\x02tx\x18\x01 \x01(\x04\" \n\x08\x44\x61tabase\x12\x14\n\x0c\x64\x61tabaseName\x18\x01 \x01(\t\"\x9b\x02\n\x10\x44\x61tabaseSettings\x12\x14\n\x0c\x64\x61tabaseName\x18\x01 \x01(\t\x12\x0f\n\x07replica\x18\x02 \x01(\x08\x12\x16\n\x0emasterDatabase\x18\x03 \x01(\t\x12\x15\n\rmasterAddress\x18\x04 \x01(\t\x12\x12\n\nmasterPort\x18\x05 \x01(\r\x12\x18\n\x10\x66ollowerUsername\x18\x06 \x01(\t\x12\x18\n\x10\x66ollowerPassword\x18\x07 \x01(\t\x12\x10\n\x08\x66ileSize\x18\x08 \x01(\r\x12\x11\n\tmaxKeyLen\x18\t \x01(\r\x12\x13\n\x0bmaxValueLen\x18\n \x01(\r\x12\x14\n\x0cmaxTxEntries\x18\x0b \x01(\r\x12\x19\n\x11\x65xcludeCommitTime\x18\x0c \x01(\x08\"u\n\x15\x43reateDatabaseRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x39\n\x08settings\x18\x02 \x01(\x0b\x32\'.immudb.schema.DatabaseNullableSettings\x12\x13\n\x0bifNotExists\x18\x03 \x01(\x08\"y\n\x16\x43reateDatabaseResponse\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x39\n\x08settings\x18\x02 \x01(\x0b\x32\'.immudb.schema.DatabaseNullableSettings\x12\x16\n\x0e\x61lreadyExisted\x18\x03 \x01(\x08\"d\n\x15UpdateDatabaseRequest\x12\x10\n\x08\x64\x61tabase\x18\x01 \x01(\t\x12\x39\n\x08settings\x18\x02 \x01(\x0b\x32\'.immudb.schema.DatabaseNullableSettings\"e\n\x16UpdateDatabaseResponse\x12\x10\n\x08\x64\x61tabase\x18\x01 \x01(\t\x12\x39\n\x08settings\x18\x02 \x01(\x0b\x32\'.immudb.schema.DatabaseNullableSettings\"\x19\n\x17\x44\x61tabaseSettingsRequest\"g\n\x18\x44\x61tabaseSettingsResponse\x12\x10\n\x08\x64\x61tabase\x18\x01 \x01(\t\x12\x39\n\x08settings\x18\x02 \x01(\x0b\x32\'.immudb.schema.DatabaseNullableSettings\"\x1f\n\x0eNullableUint32\x12\r\n\x05value\x18\x01 \x01(\r\"\x1f\n\x0eNullableUint64\x12\r\n\x05value\x18\x01 \x01(\x04\"\x1e\n\rNullableFloat\x12\r\n\x05value\x18\x01 \x01(\x02\"\x1d\n\x0cNullableBool\x12\r\n\x05value\x18\x01 \x01(\x08\"\x1f\n\x0eNullableString\x12\r\n\x05value\x18\x01 \x01(\t\"%\n\x14NullableMilliseconds\x12\r\n\x05value\x18\x01 \x01(\x03\"\xd2\x08\n\x18\x44\x61tabaseNullableSettings\x12G\n\x13replicationSettings\x18\x02 \x01(\x0b\x32*.immudb.schema.ReplicationNullableSettings\x12/\n\x08\x66ileSize\x18\x08 \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12\x30\n\tmaxKeyLen\x18\t \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12\x32\n\x0bmaxValueLen\x18\n \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12\x33\n\x0cmaxTxEntries\x18\x0b \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12\x36\n\x11\x65xcludeCommitTime\x18\x0c \x01(\x0b\x32\x1b.immudb.schema.NullableBool\x12\x35\n\x0emaxConcurrency\x18\r \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12\x37\n\x10maxIOConcurrency\x18\x0e \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12\x35\n\x0etxLogCacheSize\x18\x0f \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12\x39\n\x12vLogMaxOpenedFiles\x18\x10 \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12:\n\x13txLogMaxOpenedFiles\x18\x11 \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12>\n\x17\x63ommitLogMaxOpenedFiles\x18\x12 \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12;\n\rindexSettings\x18\x13 \x01(\x0b\x32$.immudb.schema.IndexNullableSettings\x12;\n\x14writeTxHeaderVersion\x18\x14 \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12-\n\x08\x61utoload\x18\x15 \x01(\x0b\x32\x1b.immudb.schema.NullableBool\x12\x35\n\x0ereadTxPoolSize\x18\x16 \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12:\n\rsyncFrequency\x18\x17 \x01(\x0b\x32#.immudb.schema.NullableMilliseconds\x12\x36\n\x0fwriteBufferSize\x18\x18 \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12\x37\n\x0b\x61htSettings\x18\x19 \x01(\x0b\x32\".immudb.schema.AHTNullableSettings\"\xdd\x02\n\x1bReplicationNullableSettings\x12,\n\x07replica\x18\x01 \x01(\x0b\x32\x1b.immudb.schema.NullableBool\x12\x35\n\x0emasterDatabase\x18\x02 \x01(\x0b\x32\x1d.immudb.schema.NullableString\x12\x34\n\rmasterAddress\x18\x03 \x01(\x0b\x32\x1d.immudb.schema.NullableString\x12\x31\n\nmasterPort\x18\x04 \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12\x37\n\x10\x66ollowerUsername\x18\x05 \x01(\x0b\x32\x1d.immudb.schema.NullableString\x12\x37\n\x10\x66ollowerPassword\x18\x06 \x01(\x0b\x32\x1d.immudb.schema.NullableString\"\x86\x06\n\x15IndexNullableSettings\x12\x35\n\x0e\x66lushThreshold\x18\x01 \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12\x34\n\rsyncThreshold\x18\x02 \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12\x30\n\tcacheSize\x18\x03 \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12\x32\n\x0bmaxNodeSize\x18\x04 \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12\x39\n\x12maxActiveSnapshots\x18\x05 \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12\x39\n\x12renewSnapRootAfter\x18\x06 \x01(\x0b\x32\x1d.immudb.schema.NullableUint64\x12\x35\n\x0e\x63ompactionThld\x18\x07 \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12<\n\x15\x64\x65layDuringCompaction\x18\x08 \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12=\n\x16nodesLogMaxOpenedFiles\x18\t \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12?\n\x18historyLogMaxOpenedFiles\x18\n \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12>\n\x17\x63ommitLogMaxOpenedFiles\x18\x0b \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12\x36\n\x0f\x66lushBufferSize\x18\x0c \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12\x37\n\x11\x63leanupPercentage\x18\r \x01(\x0b\x32\x1c.immudb.schema.NullableFloat\"\x83\x01\n\x13\x41HTNullableSettings\x12\x34\n\rsyncThreshold\x18\x01 \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\x12\x36\n\x0fwriteBufferSize\x18\x02 \x01(\x0b\x32\x1d.immudb.schema.NullableUint32\"\'\n\x13LoadDatabaseRequest\x12\x10\n\x08\x64\x61tabase\x18\x01 \x01(\t\"(\n\x14LoadDatabaseResponse\x12\x10\n\x08\x64\x61tabase\x18\x01 \x01(\t\")\n\x15UnloadDatabaseRequest\x12\x10\n\x08\x64\x61tabase\x18\x01 \x01(\t\"*\n\x16UnloadDatabaseResponse\x12\x10\n\x08\x64\x61tabase\x18\x01 \x01(\t\")\n\x15\x44\x65leteDatabaseRequest\x12\x10\n\x08\x64\x61tabase\x18\x01 \x01(\t\"*\n\x16\x44\x65leteDatabaseResponse\x12\x10\n\x08\x64\x61tabase\x18\x01 \x01(\t\">\n\x11\x46lushIndexRequest\x12\x19\n\x11\x63leanupPercentage\x18\x01 \x01(\x02\x12\x0e\n\x06synced\x18\x02 \x01(\x08\"&\n\x12\x46lushIndexResponse\x12\x10\n\x08\x64\x61tabase\x18\x01 \x01(\t\"\x1a\n\x05Table\x12\x11\n\ttableName\x18\x01 \x01(\t\"h\n\rSQLGetRequest\x12\r\n\x05table\x18\x01 \x01(\t\x12)\n\x08pkValues\x18\x02 \x03(\x0b\x32\x17.immudb.schema.SQLValue\x12\x0c\n\x04\x61tTx\x18\x03 \x01(\x04\x12\x0f\n\x07sinceTx\x18\x04 \x01(\x04\"d\n\x17VerifiableSQLGetRequest\x12\x33\n\rsqlGetRequest\x18\x01 \x01(\x0b\x32\x1c.immudb.schema.SQLGetRequest\x12\x14\n\x0cproveSinceTx\x18\x02 \x01(\x04\"_\n\x08SQLEntry\x12\n\n\x02tx\x18\x01 \x01(\x04\x12\x0b\n\x03key\x18\x02 \x01(\x0c\x12\r\n\x05value\x18\x03 \x01(\x0c\x12+\n\x08metadata\x18\x04 \x01(\x0b\x32\x19.immudb.schema.KVMetadata\"\xdd\x05\n\x12VerifiableSQLEntry\x12)\n\x08sqlEntry\x18\x01 \x01(\x0b\x32\x17.immudb.schema.SQLEntry\x12\x31\n\x0cverifiableTx\x18\x02 \x01(\x0b\x32\x1b.immudb.schema.VerifiableTx\x12\x35\n\x0einclusionProof\x18\x03 \x01(\x0b\x32\x1d.immudb.schema.InclusionProof\x12\x12\n\nDatabaseId\x18\x04 \x01(\r\x12\x0f\n\x07TableId\x18\x05 \x01(\r\x12\r\n\x05PKIDs\x18\x10 \x03(\r\x12I\n\x0c\x43olNamesById\x18\x08 \x03(\x0b\x32\x33.immudb.schema.VerifiableSQLEntry.ColNamesByIdEntry\x12I\n\x0c\x43olIdsByName\x18\t \x03(\x0b\x32\x33.immudb.schema.VerifiableSQLEntry.ColIdsByNameEntry\x12I\n\x0c\x43olTypesById\x18\n \x03(\x0b\x32\x33.immudb.schema.VerifiableSQLEntry.ColTypesByIdEntry\x12\x45\n\nColLenById\x18\x0b \x03(\x0b\x32\x31.immudb.schema.VerifiableSQLEntry.ColLenByIdEntry\x1a\x33\n\x11\x43olNamesByIdEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x33\n\x11\x43olIdsByNameEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\r:\x02\x38\x01\x1a\x33\n\x11\x43olTypesByIdEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x31\n\x0f\x43olLenByIdEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01J\x04\x08\x06\x10\x07\"!\n\x10UseDatabaseReply\x12\r\n\x05token\x18\x01 \x01(\t\"\x82\x01\n\x17\x43hangePermissionRequest\x12/\n\x06\x61\x63tion\x18\x01 \x01(\x0e\x32\x1f.immudb.schema.PermissionAction\x12\x10\n\x08username\x18\x02 \x01(\t\x12\x10\n\x08\x64\x61tabase\x18\x03 \x01(\t\x12\x12\n\npermission\x18\x04 \x01(\r\"8\n\x14SetActiveUserRequest\x12\x0e\n\x06\x61\x63tive\x18\x01 \x01(\x08\x12\x10\n\x08username\x18\x02 \x01(\t\"B\n\x14\x44\x61tabaseListResponse\x12*\n\tdatabases\x18\x01 \x03(\x0b\x32\x17.immudb.schema.Database\"\x17\n\x15\x44\x61tabaseListRequestV2\"P\n\x16\x44\x61tabaseListResponseV2\x12\x36\n\tdatabases\x18\x01 \x03(\x0b\x32#.immudb.schema.DatabaseWithSettings\"o\n\x14\x44\x61tabaseWithSettings\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x39\n\x08settings\x18\x02 \x01(\x0b\x32\'.immudb.schema.DatabaseNullableSettings\x12\x0e\n\x06loaded\x18\x03 \x01(\x08\"\x18\n\x05\x43hunk\x12\x0f\n\x07\x63ontent\x18\x01 \x01(\x0c\"9\n\x12UseSnapshotRequest\x12\x0f\n\x07sinceTx\x18\x01 \x01(\x04\x12\x12\n\nasBeforeTx\x18\x02 \x01(\x04\"X\n\x0eSQLExecRequest\x12\x0b\n\x03sql\x18\x01 \x01(\t\x12)\n\x06params\x18\x02 \x03(\x0b\x32\x19.immudb.schema.NamedParam\x12\x0e\n\x06noWait\x18\x03 \x01(\x08\"`\n\x0fSQLQueryRequest\x12\x0b\n\x03sql\x18\x01 \x01(\t\x12)\n\x06params\x18\x02 \x03(\x0b\x32\x19.immudb.schema.NamedParam\x12\x15\n\rreuseSnapshot\x18\x03 \x01(\x08\"B\n\nNamedParam\x12\x0c\n\x04name\x18\x01 \x01(\t\x12&\n\x05value\x18\x02 \x01(\x0b\x32\x17.immudb.schema.SQLValue\"N\n\rSQLExecResult\x12*\n\x03txs\x18\x05 \x03(\x0b\x32\x1d.immudb.schema.CommittedSQLTx\x12\x11\n\tongoingTx\x18\x06 \x01(\x08\"\x8d\x03\n\x0e\x43ommittedSQLTx\x12\'\n\x06header\x18\x01 \x01(\x0b\x32\x17.immudb.schema.TxHeader\x12\x13\n\x0bupdatedRows\x18\x02 \x01(\r\x12K\n\x0flastInsertedPKs\x18\x03 \x03(\x0b\x32\x32.immudb.schema.CommittedSQLTx.LastInsertedPKsEntry\x12M\n\x10\x66irstInsertedPKs\x18\x04 \x03(\x0b\x32\x33.immudb.schema.CommittedSQLTx.FirstInsertedPKsEntry\x1aO\n\x14LastInsertedPKsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12&\n\x05value\x18\x02 \x01(\x0b\x32\x17.immudb.schema.SQLValue:\x02\x38\x01\x1aP\n\x15\x46irstInsertedPKsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12&\n\x05value\x18\x02 \x01(\x0b\x32\x17.immudb.schema.SQLValue:\x02\x38\x01\"Z\n\x0eSQLQueryResult\x12&\n\x07\x63olumns\x18\x02 \x03(\x0b\x32\x15.immudb.schema.Column\x12 \n\x04rows\x18\x01 \x03(\x0b\x32\x12.immudb.schema.Row\"$\n\x06\x43olumn\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\"?\n\x03Row\x12\x0f\n\x07\x63olumns\x18\x01 \x03(\t\x12\'\n\x06values\x18\x02 \x03(\x0b\x32\x17.immudb.schema.SQLValue\"\x82\x01\n\x08SQLValue\x12*\n\x04null\x18\x01 \x01(\x0e\x32\x1a.google.protobuf.NullValueH\x00\x12\x0b\n\x01n\x18\x02 \x01(\x03H\x00\x12\x0b\n\x01s\x18\x03 \x01(\tH\x00\x12\x0b\n\x01\x62\x18\x04 \x01(\x08H\x00\x12\x0c\n\x02\x62s\x18\x05 \x01(\x0cH\x00\x12\x0c\n\x02ts\x18\x06 \x01(\x03H\x00\x42\x07\n\x05value\"3\n\x0cNewTxRequest\x12#\n\x04mode\x18\x01 \x01(\x0e\x32\x15.immudb.schema.TxMode\"&\n\rNewTxResponse\x12\x15\n\rtransactionID\x18\x01 \x01(\t\"(\n\tErrorInfo\x12\x0c\n\x04\x63ode\x18\x01 \x01(\t\x12\r\n\x05\x63\x61use\x18\x02 \x01(\t\"\x1a\n\tDebugInfo\x12\r\n\x05stack\x18\x01 \x01(\t\" \n\tRetryInfo\x12\x13\n\x0bretry_delay\x18\x01 \x01(\x05*K\n\x0f\x45ntryTypeAction\x12\x0b\n\x07\x45XCLUDE\x10\x00\x12\x0f\n\x0bONLY_DIGEST\x10\x01\x12\r\n\tRAW_VALUE\x10\x02\x12\x0b\n\x07RESOLVE\x10\x03*)\n\x10PermissionAction\x12\t\n\x05GRANT\x10\x00\x12\n\n\x06REVOKE\x10\x01*4\n\x06TxMode\x12\x0c\n\x08ReadOnly\x10\x00\x12\r\n\tWriteOnly\x10\x01\x12\r\n\tReadWrite\x10\x02\x32\xd1\x32\n\x0bImmuService\x12P\n\tListUsers\x12\x16.google.protobuf.Empty\x1a\x17.immudb.schema.UserList\"\x12\x82\xd3\xe4\x93\x02\x0c\x12\n/user/list\x12X\n\nCreateUser\x12 .immudb.schema.CreateUserRequest\x1a\x16.google.protobuf.Empty\"\x10\x82\xd3\xe4\x93\x02\n\"\x05/user:\x01*\x12p\n\x0e\x43hangePassword\x12$.immudb.schema.ChangePasswordRequest\x1a\x16.google.protobuf.Empty\" \x82\xd3\xe4\x93\x02\x1a\"\x15/user/password/change:\x01*\x12u\n\x10\x43hangePermission\x12&.immudb.schema.ChangePermissionRequest\x1a\x16.google.protobuf.Empty\"!\x82\xd3\xe4\x93\x02\x1b\"\x16/user/changepermission:\x01*\x12l\n\rSetActiveUser\x12#.immudb.schema.SetActiveUserRequest\x1a\x16.google.protobuf.Empty\"\x1e\x82\xd3\xe4\x93\x02\x18\"\x13/user/setactiveUser:\x01*\x12J\n\x10UpdateAuthConfig\x12\x19.immudb.schema.AuthConfig\x1a\x16.google.protobuf.Empty\"\x03\x88\x02\x01\x12J\n\x10UpdateMTLSConfig\x12\x19.immudb.schema.MTLSConfig\x1a\x16.google.protobuf.Empty\"\x03\x88\x02\x01\x12V\n\x0bOpenSession\x12!.immudb.schema.OpenSessionRequest\x1a\".immudb.schema.OpenSessionResponse\"\x00\x12@\n\x0c\x43loseSession\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"\x00\x12=\n\tKeepAlive\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"\x00\x12\x44\n\x05NewTx\x12\x1b.immudb.schema.NewTxRequest\x1a\x1c.immudb.schema.NewTxResponse\"\x00\x12\x41\n\x06\x43ommit\x12\x16.google.protobuf.Empty\x1a\x1d.immudb.schema.CommittedSQLTx\"\x00\x12<\n\x08Rollback\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"\x00\x12\x44\n\tTxSQLExec\x12\x1d.immudb.schema.SQLExecRequest\x1a\x16.google.protobuf.Empty\"\x00\x12M\n\nTxSQLQuery\x12\x1e.immudb.schema.SQLQueryRequest\x1a\x1d.immudb.schema.SQLQueryResult\"\x00\x12X\n\x05Login\x12\x1b.immudb.schema.LoginRequest\x1a\x1c.immudb.schema.LoginResponse\"\x14\x88\x02\x01\x82\xd3\xe4\x93\x02\x0b\"\x06/login:\x01*\x12O\n\x06Logout\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"\x15\x88\x02\x01\x82\xd3\xe4\x93\x02\x0c\"\x07/logout:\x01*\x12M\n\x03Set\x12\x19.immudb.schema.SetRequest\x1a\x17.immudb.schema.TxHeader\"\x12\x82\xd3\xe4\x93\x02\x0c\"\x07/db/set:\x01*\x12p\n\rVerifiableSet\x12#.immudb.schema.VerifiableSetRequest\x1a\x1b.immudb.schema.VerifiableTx\"\x1d\x82\xd3\xe4\x93\x02\x17\"\x12/db/verifiable/set:\x01*\x12M\n\x03Get\x12\x19.immudb.schema.KeyRequest\x1a\x14.immudb.schema.Entry\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\r/db/get/{key}\x12s\n\rVerifiableGet\x12#.immudb.schema.VerifiableGetRequest\x1a\x1e.immudb.schema.VerifiableEntry\"\x1d\x82\xd3\xe4\x93\x02\x17\"\x12/db/verifiable/get:\x01*\x12Z\n\x06\x44\x65lete\x12 .immudb.schema.DeleteKeysRequest\x1a\x17.immudb.schema.TxHeader\"\x15\x82\xd3\xe4\x93\x02\x0f\"\n/db/delete:\x01*\x12V\n\x06GetAll\x12\x1d.immudb.schema.KeyListRequest\x1a\x16.immudb.schema.Entries\"\x15\x82\xd3\xe4\x93\x02\x0f\"\n/db/getall:\x01*\x12Y\n\x07\x45xecAll\x12\x1d.immudb.schema.ExecAllRequest\x1a\x17.immudb.schema.TxHeader\"\x16\x82\xd3\xe4\x93\x02\x10\"\x0b/db/execall:\x01*\x12O\n\x04Scan\x12\x1a.immudb.schema.ScanRequest\x1a\x16.immudb.schema.Entries\"\x13\x82\xd3\xe4\x93\x02\r\"\x08/db/scan:\x01*\x12X\n\x05\x43ount\x12\x18.immudb.schema.KeyPrefix\x1a\x19.immudb.schema.EntryCount\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/db/count/{prefix}\x12S\n\x08\x43ountAll\x12\x16.google.protobuf.Empty\x1a\x19.immudb.schema.EntryCount\"\x14\x82\xd3\xe4\x93\x02\x0e\x12\x0c/db/countall\x12J\n\x06TxById\x12\x18.immudb.schema.TxRequest\x1a\x11.immudb.schema.Tx\"\x13\x82\xd3\xe4\x93\x02\r\x12\x0b/db/tx/{tx}\x12s\n\x10VerifiableTxById\x12\".immudb.schema.VerifiableTxRequest\x1a\x1b.immudb.schema.VerifiableTx\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/db/verifiable/tx/{tx}\x12P\n\x06TxScan\x12\x1c.immudb.schema.TxScanRequest\x1a\x15.immudb.schema.TxList\"\x11\x82\xd3\xe4\x93\x02\x0b\"\x06/db/tx:\x01*\x12X\n\x07History\x12\x1d.immudb.schema.HistoryRequest\x1a\x16.immudb.schema.Entries\"\x16\x82\xd3\xe4\x93\x02\x10\"\x0b/db/history:\x01*\x12\x66\n\nServerInfo\x12 .immudb.schema.ServerInfoRequest\x1a!.immudb.schema.ServerInfoResponse\"\x13\x82\xd3\xe4\x93\x02\r\x12\x0b/serverinfo\x12P\n\x06Health\x12\x16.google.protobuf.Empty\x1a\x1d.immudb.schema.HealthResponse\"\x0f\x82\xd3\xe4\x93\x02\t\x12\x07/health\x12\x63\n\x0e\x44\x61tabaseHealth\x12\x16.google.protobuf.Empty\x1a%.immudb.schema.DatabaseHealthResponse\"\x12\x82\xd3\xe4\x93\x02\x0c\x12\n/db/health\x12X\n\x0c\x43urrentState\x12\x16.google.protobuf.Empty\x1a\x1d.immudb.schema.ImmutableState\"\x11\x82\xd3\xe4\x93\x02\x0b\x12\t/db/state\x12\x65\n\x0cSetReference\x12\x1f.immudb.schema.ReferenceRequest\x1a\x17.immudb.schema.TxHeader\"\x1b\x82\xd3\xe4\x93\x02\x15\"\x10/db/setreference:\x01*\x12\x88\x01\n\x16VerifiableSetReference\x12).immudb.schema.VerifiableReferenceRequest\x1a\x1b.immudb.schema.VerifiableTx\"&\x82\xd3\xe4\x93\x02 \"\x1b/db/verifiable/setreference:\x01*\x12P\n\x04ZAdd\x12\x1a.immudb.schema.ZAddRequest\x1a\x17.immudb.schema.TxHeader\"\x13\x82\xd3\xe4\x93\x02\r\"\x08/db/zadd:\x01*\x12s\n\x0eVerifiableZAdd\x12$.immudb.schema.VerifiableZAddRequest\x1a\x1b.immudb.schema.VerifiableTx\"\x1e\x82\xd3\xe4\x93\x02\x18\"\x13/db/verifiable/zadd:\x01*\x12S\n\x05ZScan\x12\x1b.immudb.schema.ZScanRequest\x1a\x17.immudb.schema.ZEntries\"\x14\x82\xd3\xe4\x93\x02\x0e\"\t/db/zscan:\x01*\x12[\n\x0e\x43reateDatabase\x12\x17.immudb.schema.Database\x1a\x16.google.protobuf.Empty\"\x18\x88\x02\x01\x82\xd3\xe4\x93\x02\x0f\"\n/db/create:\x01*\x12k\n\x12\x43reateDatabaseWith\x12\x1f.immudb.schema.DatabaseSettings\x1a\x16.google.protobuf.Empty\"\x1c\x88\x02\x01\x82\xd3\xe4\x93\x02\x13\"\x0e/db/createwith:\x01*\x12y\n\x10\x43reateDatabaseV2\x12$.immudb.schema.CreateDatabaseRequest\x1a%.immudb.schema.CreateDatabaseResponse\"\x18\x82\xd3\xe4\x93\x02\x12\"\r/db/create/v2:\x01*\x12l\n\x0cLoadDatabase\x12\".immudb.schema.LoadDatabaseRequest\x1a#.immudb.schema.LoadDatabaseResponse\"\x13\x82\xd3\xe4\x93\x02\r\"\x08/db/load:\x01*\x12t\n\x0eUnloadDatabase\x12$.immudb.schema.UnloadDatabaseRequest\x1a%.immudb.schema.UnloadDatabaseResponse\"\x15\x82\xd3\xe4\x93\x02\x0f\"\n/db/unload:\x01*\x12t\n\x0e\x44\x65leteDatabase\x12$.immudb.schema.DeleteDatabaseRequest\x1a%.immudb.schema.DeleteDatabaseResponse\"\x15\x82\xd3\xe4\x93\x02\x0f\"\n/db/delete:\x01*\x12\x63\n\x0c\x44\x61tabaseList\x12\x16.google.protobuf.Empty\x1a#.immudb.schema.DatabaseListResponse\"\x16\x88\x02\x01\x82\xd3\xe4\x93\x02\r\"\x08/db/list:\x01*\x12u\n\x0e\x44\x61tabaseListV2\x12$.immudb.schema.DatabaseListRequestV2\x1a%.immudb.schema.DatabaseListResponseV2\"\x16\x82\xd3\xe4\x93\x02\x10\"\x0b/db/list/v2:\x01*\x12g\n\x0bUseDatabase\x12\x17.immudb.schema.Database\x1a\x1f.immudb.schema.UseDatabaseReply\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/db/use/{databaseName}\x12\x63\n\x0eUpdateDatabase\x12\x1f.immudb.schema.DatabaseSettings\x1a\x16.google.protobuf.Empty\"\x18\x88\x02\x01\x82\xd3\xe4\x93\x02\x0f\"\n/db/update:\x01*\x12y\n\x10UpdateDatabaseV2\x12$.immudb.schema.UpdateDatabaseRequest\x1a%.immudb.schema.UpdateDatabaseResponse\"\x18\x82\xd3\xe4\x93\x02\x12\"\r/db/update/v2:\x01*\x12j\n\x13GetDatabaseSettings\x12\x16.google.protobuf.Empty\x1a\x1f.immudb.schema.DatabaseSettings\"\x1a\x88\x02\x01\x82\xd3\xe4\x93\x02\x11\"\x0c/db/settings:\x01*\x12\x84\x01\n\x15GetDatabaseSettingsV2\x12&.immudb.schema.DatabaseSettingsRequest\x1a\'.immudb.schema.DatabaseSettingsResponse\"\x1a\x82\xd3\xe4\x93\x02\x14\"\x0f/db/settings/v2:\x01*\x12i\n\nFlushIndex\x12 .immudb.schema.FlushIndexRequest\x1a!.immudb.schema.FlushIndexResponse\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/db/flushindex\x12X\n\x0c\x43ompactIndex\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/db/compactindex\x12@\n\tstreamGet\x12\x19.immudb.schema.KeyRequest\x1a\x14.immudb.schema.Chunk\"\x00\x30\x01\x12>\n\tstreamSet\x12\x14.immudb.schema.Chunk\x1a\x17.immudb.schema.TxHeader\"\x00(\x01\x12T\n\x13streamVerifiableGet\x12#.immudb.schema.VerifiableGetRequest\x1a\x14.immudb.schema.Chunk\"\x00\x30\x01\x12L\n\x13streamVerifiableSet\x12\x14.immudb.schema.Chunk\x1a\x1b.immudb.schema.VerifiableTx\"\x00(\x01\x12\x42\n\nstreamScan\x12\x1a.immudb.schema.ScanRequest\x1a\x14.immudb.schema.Chunk\"\x00\x30\x01\x12\x44\n\x0bstreamZScan\x12\x1b.immudb.schema.ZScanRequest\x1a\x14.immudb.schema.Chunk\"\x00\x30\x01\x12H\n\rstreamHistory\x12\x1d.immudb.schema.HistoryRequest\x1a\x14.immudb.schema.Chunk\"\x00\x30\x01\x12\x42\n\rstreamExecAll\x12\x14.immudb.schema.Chunk\x1a\x17.immudb.schema.TxHeader\"\x00(\x01\x12\x44\n\x08\x65xportTx\x12\x1e.immudb.schema.ExportTxRequest\x1a\x14.immudb.schema.Chunk\"\x00\x30\x01\x12@\n\x0breplicateTx\x12\x14.immudb.schema.Chunk\x1a\x17.immudb.schema.TxHeader\"\x00(\x01\x12^\n\x07SQLExec\x12\x1d.immudb.schema.SQLExecRequest\x1a\x1c.immudb.schema.SQLExecResult\"\x16\x82\xd3\xe4\x93\x02\x10\"\x0b/db/sqlexec:\x01*\x12\x62\n\x08SQLQuery\x12\x1e.immudb.schema.SQLQueryRequest\x1a\x1d.immudb.schema.SQLQueryResult\"\x17\x82\xd3\xe4\x93\x02\x11\"\x0c/db/sqlquery:\x01*\x12[\n\nListTables\x12\x16.google.protobuf.Empty\x1a\x1d.immudb.schema.SQLQueryResult\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/db/table/list\x12[\n\rDescribeTable\x12\x14.immudb.schema.Table\x1a\x1d.immudb.schema.SQLQueryResult\"\x15\x82\xd3\xe4\x93\x02\x0f\"\n/db/tables:\x01*\x12\x7f\n\x10VerifiableSQLGet\x12&.immudb.schema.VerifiableSQLGetRequest\x1a!.immudb.schema.VerifiableSQLEntry\" \x82\xd3\xe4\x93\x02\x1a\"\x15/db/verifiable/sqlget:\x01*B-Z+github.com/codenotary/immudb/pkg/api/schemab\x06proto3')

_ENTRYTYPEACTION = DESCRIPTOR.enum_types_by_name['EntryTypeAction']
EntryTypeAction = enum_type_wrapper.EnumTypeWrapper(_ENTRYTYPEACTION)
_PERMISSIONACTION = DESCRIPTOR.enum_types_by_name['PermissionAction']
PermissionAction = enum_type_wrapper.EnumTypeWrapper(_PERMISSIONACTION)
_TXMODE = DESCRIPTOR.enum_types_by_name['TxMode']
TxMode = enum_type_wrapper.EnumTypeWrapper(_TXMODE)
EXCLUDE = 0
ONLY_DIGEST = 1
RAW_VALUE = 2
RESOLVE = 3
GRANT = 0
REVOKE = 1
ReadOnly = 0
WriteOnly = 1
ReadWrite = 2


_KEY = DESCRIPTOR.message_types_by_name['Key']
_PERMISSION = DESCRIPTOR.message_types_by_name['Permission']
_USER = DESCRIPTOR.message_types_by_name['User']
_USERLIST = DESCRIPTOR.message_types_by_name['UserList']
_CREATEUSERREQUEST = DESCRIPTOR.message_types_by_name['CreateUserRequest']
_USERREQUEST = DESCRIPTOR.message_types_by_name['UserRequest']
_CHANGEPASSWORDREQUEST = DESCRIPTOR.message_types_by_name['ChangePasswordRequest']
_LOGINREQUEST = DESCRIPTOR.message_types_by_name['LoginRequest']
_LOGINRESPONSE = DESCRIPTOR.message_types_by_name['LoginResponse']
_AUTHCONFIG = DESCRIPTOR.message_types_by_name['AuthConfig']
_MTLSCONFIG = DESCRIPTOR.message_types_by_name['MTLSConfig']
_OPENSESSIONREQUEST = DESCRIPTOR.message_types_by_name['OpenSessionRequest']
_OPENSESSIONRESPONSE = DESCRIPTOR.message_types_by_name['OpenSessionResponse']
_PRECONDITION = DESCRIPTOR.message_types_by_name['Precondition']
_PRECONDITION_KEYMUSTEXISTPRECONDITION = _PRECONDITION.nested_types_by_name['KeyMustExistPrecondition']
_PRECONDITION_KEYMUSTNOTEXISTPRECONDITION = _PRECONDITION.nested_types_by_name['KeyMustNotExistPrecondition']
_PRECONDITION_KEYNOTMODIFIEDAFTERTXPRECONDITION = _PRECONDITION.nested_types_by_name['KeyNotModifiedAfterTXPrecondition']
_KEYVALUE = DESCRIPTOR.message_types_by_name['KeyValue']
_ENTRY = DESCRIPTOR.message_types_by_name['Entry']
_REFERENCE = DESCRIPTOR.message_types_by_name['Reference']
_OP = DESCRIPTOR.message_types_by_name['Op']
_EXECALLREQUEST = DESCRIPTOR.message_types_by_name['ExecAllRequest']
_ENTRIES = DESCRIPTOR.message_types_by_name['Entries']
_ZENTRY = DESCRIPTOR.message_types_by_name['ZEntry']
_ZENTRIES = DESCRIPTOR.message_types_by_name['ZEntries']
_SCANREQUEST = DESCRIPTOR.message_types_by_name['ScanRequest']
_KEYPREFIX = DESCRIPTOR.message_types_by_name['KeyPrefix']
_ENTRYCOUNT = DESCRIPTOR.message_types_by_name['EntryCount']
_SIGNATURE = DESCRIPTOR.message_types_by_name['Signature']
_TXHEADER = DESCRIPTOR.message_types_by_name['TxHeader']
_TXMETADATA = DESCRIPTOR.message_types_by_name['TxMetadata']
_LINEARPROOF = DESCRIPTOR.message_types_by_name['LinearProof']
_DUALPROOF = DESCRIPTOR.message_types_by_name['DualProof']
_TX = DESCRIPTOR.message_types_by_name['Tx']
_TXENTRY = DESCRIPTOR.message_types_by_name['TxEntry']
_KVMETADATA = DESCRIPTOR.message_types_by_name['KVMetadata']
_EXPIRATION = DESCRIPTOR.message_types_by_name['Expiration']
_VERIFIABLETX = DESCRIPTOR.message_types_by_name['VerifiableTx']
_VERIFIABLEENTRY = DESCRIPTOR.message_types_by_name['VerifiableEntry']
_INCLUSIONPROOF = DESCRIPTOR.message_types_by_name['InclusionProof']
_SETREQUEST = DESCRIPTOR.message_types_by_name['SetRequest']
_KEYREQUEST = DESCRIPTOR.message_types_by_name['KeyRequest']
_KEYLISTREQUEST = DESCRIPTOR.message_types_by_name['KeyListRequest']
_DELETEKEYSREQUEST = DESCRIPTOR.message_types_by_name['DeleteKeysRequest']
_VERIFIABLESETREQUEST = DESCRIPTOR.message_types_by_name['VerifiableSetRequest']
_VERIFIABLEGETREQUEST = DESCRIPTOR.message_types_by_name['VerifiableGetRequest']
_SERVERINFOREQUEST = DESCRIPTOR.message_types_by_name['ServerInfoRequest']
_SERVERINFORESPONSE = DESCRIPTOR.message_types_by_name['ServerInfoResponse']
_HEALTHRESPONSE = DESCRIPTOR.message_types_by_name['HealthResponse']
_DATABASEHEALTHRESPONSE = DESCRIPTOR.message_types_by_name['DatabaseHealthResponse']
_IMMUTABLESTATE = DESCRIPTOR.message_types_by_name['ImmutableState']
_REFERENCEREQUEST = DESCRIPTOR.message_types_by_name['ReferenceRequest']
_VERIFIABLEREFERENCEREQUEST = DESCRIPTOR.message_types_by_name['VerifiableReferenceRequest']
_ZADDREQUEST = DESCRIPTOR.message_types_by_name['ZAddRequest']
_SCORE = DESCRIPTOR.message_types_by_name['Score']
_ZSCANREQUEST = DESCRIPTOR.message_types_by_name['ZScanRequest']
_HISTORYREQUEST = DESCRIPTOR.message_types_by_name['HistoryRequest']
_VERIFIABLEZADDREQUEST = DESCRIPTOR.message_types_by_name['VerifiableZAddRequest']
_TXREQUEST = DESCRIPTOR.message_types_by_name['TxRequest']
_ENTRIESSPEC = DESCRIPTOR.message_types_by_name['EntriesSpec']
_ENTRYTYPESPEC = DESCRIPTOR.message_types_by_name['EntryTypeSpec']
_VERIFIABLETXREQUEST = DESCRIPTOR.message_types_by_name['VerifiableTxRequest']
_TXSCANREQUEST = DESCRIPTOR.message_types_by_name['TxScanRequest']
_TXLIST = DESCRIPTOR.message_types_by_name['TxList']
_EXPORTTXREQUEST = DESCRIPTOR.message_types_by_name['ExportTxRequest']
_DATABASE = DESCRIPTOR.message_types_by_name['Database']
_DATABASESETTINGS = DESCRIPTOR.message_types_by_name['DatabaseSettings']
_CREATEDATABASEREQUEST = DESCRIPTOR.message_types_by_name['CreateDatabaseRequest']
_CREATEDATABASERESPONSE = DESCRIPTOR.message_types_by_name['CreateDatabaseResponse']
_UPDATEDATABASEREQUEST = DESCRIPTOR.message_types_by_name['UpdateDatabaseRequest']
_UPDATEDATABASERESPONSE = DESCRIPTOR.message_types_by_name['UpdateDatabaseResponse']
_DATABASESETTINGSREQUEST = DESCRIPTOR.message_types_by_name['DatabaseSettingsRequest']
_DATABASESETTINGSRESPONSE = DESCRIPTOR.message_types_by_name['DatabaseSettingsResponse']
_NULLABLEUINT32 = DESCRIPTOR.message_types_by_name['NullableUint32']
_NULLABLEUINT64 = DESCRIPTOR.message_types_by_name['NullableUint64']
_NULLABLEFLOAT = DESCRIPTOR.message_types_by_name['NullableFloat']
_NULLABLEBOOL = DESCRIPTOR.message_types_by_name['NullableBool']
_NULLABLESTRING = DESCRIPTOR.message_types_by_name['NullableString']
_NULLABLEMILLISECONDS = DESCRIPTOR.message_types_by_name['NullableMilliseconds']
_DATABASENULLABLESETTINGS = DESCRIPTOR.message_types_by_name['DatabaseNullableSettings']
_REPLICATIONNULLABLESETTINGS = DESCRIPTOR.message_types_by_name['ReplicationNullableSettings']
_INDEXNULLABLESETTINGS = DESCRIPTOR.message_types_by_name['IndexNullableSettings']
_AHTNULLABLESETTINGS = DESCRIPTOR.message_types_by_name['AHTNullableSettings']
_LOADDATABASEREQUEST = DESCRIPTOR.message_types_by_name['LoadDatabaseRequest']
_LOADDATABASERESPONSE = DESCRIPTOR.message_types_by_name['LoadDatabaseResponse']
_UNLOADDATABASEREQUEST = DESCRIPTOR.message_types_by_name['UnloadDatabaseRequest']
_UNLOADDATABASERESPONSE = DESCRIPTOR.message_types_by_name['UnloadDatabaseResponse']
_DELETEDATABASEREQUEST = DESCRIPTOR.message_types_by_name['DeleteDatabaseRequest']
_DELETEDATABASERESPONSE = DESCRIPTOR.message_types_by_name['DeleteDatabaseResponse']
_FLUSHINDEXREQUEST = DESCRIPTOR.message_types_by_name['FlushIndexRequest']
_FLUSHINDEXRESPONSE = DESCRIPTOR.message_types_by_name['FlushIndexResponse']
_TABLE = DESCRIPTOR.message_types_by_name['Table']
_SQLGETREQUEST = DESCRIPTOR.message_types_by_name['SQLGetRequest']
_VERIFIABLESQLGETREQUEST = DESCRIPTOR.message_types_by_name['VerifiableSQLGetRequest']
_SQLENTRY = DESCRIPTOR.message_types_by_name['SQLEntry']
_VERIFIABLESQLENTRY = DESCRIPTOR.message_types_by_name['VerifiableSQLEntry']
_VERIFIABLESQLENTRY_COLNAMESBYIDENTRY = _VERIFIABLESQLENTRY.nested_types_by_name['ColNamesByIdEntry']
_VERIFIABLESQLENTRY_COLIDSBYNAMEENTRY = _VERIFIABLESQLENTRY.nested_types_by_name['ColIdsByNameEntry']
_VERIFIABLESQLENTRY_COLTYPESBYIDENTRY = _VERIFIABLESQLENTRY.nested_types_by_name['ColTypesByIdEntry']
_VERIFIABLESQLENTRY_COLLENBYIDENTRY = _VERIFIABLESQLENTRY.nested_types_by_name['ColLenByIdEntry']
_USEDATABASEREPLY = DESCRIPTOR.message_types_by_name['UseDatabaseReply']
_CHANGEPERMISSIONREQUEST = DESCRIPTOR.message_types_by_name['ChangePermissionRequest']
_SETACTIVEUSERREQUEST = DESCRIPTOR.message_types_by_name['SetActiveUserRequest']
_DATABASELISTRESPONSE = DESCRIPTOR.message_types_by_name['DatabaseListResponse']
_DATABASELISTREQUESTV2 = DESCRIPTOR.message_types_by_name['DatabaseListRequestV2']
_DATABASELISTRESPONSEV2 = DESCRIPTOR.message_types_by_name['DatabaseListResponseV2']
_DATABASEWITHSETTINGS = DESCRIPTOR.message_types_by_name['DatabaseWithSettings']
_CHUNK = DESCRIPTOR.message_types_by_name['Chunk']
_USESNAPSHOTREQUEST = DESCRIPTOR.message_types_by_name['UseSnapshotRequest']
_SQLEXECREQUEST = DESCRIPTOR.message_types_by_name['SQLExecRequest']
_SQLQUERYREQUEST = DESCRIPTOR.message_types_by_name['SQLQueryRequest']
_NAMEDPARAM = DESCRIPTOR.message_types_by_name['NamedParam']
_SQLEXECRESULT = DESCRIPTOR.message_types_by_name['SQLExecResult']
_COMMITTEDSQLTX = DESCRIPTOR.message_types_by_name['CommittedSQLTx']
_COMMITTEDSQLTX_LASTINSERTEDPKSENTRY = _COMMITTEDSQLTX.nested_types_by_name['LastInsertedPKsEntry']
_COMMITTEDSQLTX_FIRSTINSERTEDPKSENTRY = _COMMITTEDSQLTX.nested_types_by_name['FirstInsertedPKsEntry']
_SQLQUERYRESULT = DESCRIPTOR.message_types_by_name['SQLQueryResult']
_COLUMN = DESCRIPTOR.message_types_by_name['Column']
_ROW = DESCRIPTOR.message_types_by_name['Row']
_SQLVALUE = DESCRIPTOR.message_types_by_name['SQLValue']
_NEWTXREQUEST = DESCRIPTOR.message_types_by_name['NewTxRequest']
_NEWTXRESPONSE = DESCRIPTOR.message_types_by_name['NewTxResponse']
_ERRORINFO = DESCRIPTOR.message_types_by_name['ErrorInfo']
_DEBUGINFO = DESCRIPTOR.message_types_by_name['DebugInfo']
_RETRYINFO = DESCRIPTOR.message_types_by_name['RetryInfo']
Key = _reflection.GeneratedProtocolMessageType('Key', (_message.Message,), {
  'DESCRIPTOR' : _KEY,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.Key)
  })
_sym_db.RegisterMessage(Key)

Permission = _reflection.GeneratedProtocolMessageType('Permission', (_message.Message,), {
  'DESCRIPTOR' : _PERMISSION,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.Permission)
  })
_sym_db.RegisterMessage(Permission)

User = _reflection.GeneratedProtocolMessageType('User', (_message.Message,), {
  'DESCRIPTOR' : _USER,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.User)
  })
_sym_db.RegisterMessage(User)

UserList = _reflection.GeneratedProtocolMessageType('UserList', (_message.Message,), {
  'DESCRIPTOR' : _USERLIST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.UserList)
  })
_sym_db.RegisterMessage(UserList)

CreateUserRequest = _reflection.GeneratedProtocolMessageType('CreateUserRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATEUSERREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.CreateUserRequest)
  })
_sym_db.RegisterMessage(CreateUserRequest)

UserRequest = _reflection.GeneratedProtocolMessageType('UserRequest', (_message.Message,), {
  'DESCRIPTOR' : _USERREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.UserRequest)
  })
_sym_db.RegisterMessage(UserRequest)

ChangePasswordRequest = _reflection.GeneratedProtocolMessageType('ChangePasswordRequest', (_message.Message,), {
  'DESCRIPTOR' : _CHANGEPASSWORDREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.ChangePasswordRequest)
  })
_sym_db.RegisterMessage(ChangePasswordRequest)

LoginRequest = _reflection.GeneratedProtocolMessageType('LoginRequest', (_message.Message,), {
  'DESCRIPTOR' : _LOGINREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.LoginRequest)
  })
_sym_db.RegisterMessage(LoginRequest)

LoginResponse = _reflection.GeneratedProtocolMessageType('LoginResponse', (_message.Message,), {
  'DESCRIPTOR' : _LOGINRESPONSE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.LoginResponse)
  })
_sym_db.RegisterMessage(LoginResponse)

AuthConfig = _reflection.GeneratedProtocolMessageType('AuthConfig', (_message.Message,), {
  'DESCRIPTOR' : _AUTHCONFIG,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.AuthConfig)
  })
_sym_db.RegisterMessage(AuthConfig)

MTLSConfig = _reflection.GeneratedProtocolMessageType('MTLSConfig', (_message.Message,), {
  'DESCRIPTOR' : _MTLSCONFIG,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.MTLSConfig)
  })
_sym_db.RegisterMessage(MTLSConfig)

OpenSessionRequest = _reflection.GeneratedProtocolMessageType('OpenSessionRequest', (_message.Message,), {
  'DESCRIPTOR' : _OPENSESSIONREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.OpenSessionRequest)
  })
_sym_db.RegisterMessage(OpenSessionRequest)

OpenSessionResponse = _reflection.GeneratedProtocolMessageType('OpenSessionResponse', (_message.Message,), {
  'DESCRIPTOR' : _OPENSESSIONRESPONSE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.OpenSessionResponse)
  })
_sym_db.RegisterMessage(OpenSessionResponse)

Precondition = _reflection.GeneratedProtocolMessageType('Precondition', (_message.Message,), {

  'KeyMustExistPrecondition' : _reflection.GeneratedProtocolMessageType('KeyMustExistPrecondition', (_message.Message,), {
    'DESCRIPTOR' : _PRECONDITION_KEYMUSTEXISTPRECONDITION,
    '__module__' : 'schema_pb2'
    # @@protoc_insertion_point(class_scope:immudb.schema.Precondition.KeyMustExistPrecondition)
    })
  ,

  'KeyMustNotExistPrecondition' : _reflection.GeneratedProtocolMessageType('KeyMustNotExistPrecondition', (_message.Message,), {
    'DESCRIPTOR' : _PRECONDITION_KEYMUSTNOTEXISTPRECONDITION,
    '__module__' : 'schema_pb2'
    # @@protoc_insertion_point(class_scope:immudb.schema.Precondition.KeyMustNotExistPrecondition)
    })
  ,

  'KeyNotModifiedAfterTXPrecondition' : _reflection.GeneratedProtocolMessageType('KeyNotModifiedAfterTXPrecondition', (_message.Message,), {
    'DESCRIPTOR' : _PRECONDITION_KEYNOTMODIFIEDAFTERTXPRECONDITION,
    '__module__' : 'schema_pb2'
    # @@protoc_insertion_point(class_scope:immudb.schema.Precondition.KeyNotModifiedAfterTXPrecondition)
    })
  ,
  'DESCRIPTOR' : _PRECONDITION,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.Precondition)
  })
_sym_db.RegisterMessage(Precondition)
_sym_db.RegisterMessage(Precondition.KeyMustExistPrecondition)
_sym_db.RegisterMessage(Precondition.KeyMustNotExistPrecondition)
_sym_db.RegisterMessage(Precondition.KeyNotModifiedAfterTXPrecondition)

KeyValue = _reflection.GeneratedProtocolMessageType('KeyValue', (_message.Message,), {
  'DESCRIPTOR' : _KEYVALUE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.KeyValue)
  })
_sym_db.RegisterMessage(KeyValue)

Entry = _reflection.GeneratedProtocolMessageType('Entry', (_message.Message,), {
  'DESCRIPTOR' : _ENTRY,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.Entry)
  })
_sym_db.RegisterMessage(Entry)

Reference = _reflection.GeneratedProtocolMessageType('Reference', (_message.Message,), {
  'DESCRIPTOR' : _REFERENCE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.Reference)
  })
_sym_db.RegisterMessage(Reference)

Op = _reflection.GeneratedProtocolMessageType('Op', (_message.Message,), {
  'DESCRIPTOR' : _OP,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.Op)
  })
_sym_db.RegisterMessage(Op)

ExecAllRequest = _reflection.GeneratedProtocolMessageType('ExecAllRequest', (_message.Message,), {
  'DESCRIPTOR' : _EXECALLREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.ExecAllRequest)
  })
_sym_db.RegisterMessage(ExecAllRequest)

Entries = _reflection.GeneratedProtocolMessageType('Entries', (_message.Message,), {
  'DESCRIPTOR' : _ENTRIES,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.Entries)
  })
_sym_db.RegisterMessage(Entries)

ZEntry = _reflection.GeneratedProtocolMessageType('ZEntry', (_message.Message,), {
  'DESCRIPTOR' : _ZENTRY,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.ZEntry)
  })
_sym_db.RegisterMessage(ZEntry)

ZEntries = _reflection.GeneratedProtocolMessageType('ZEntries', (_message.Message,), {
  'DESCRIPTOR' : _ZENTRIES,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.ZEntries)
  })
_sym_db.RegisterMessage(ZEntries)

ScanRequest = _reflection.GeneratedProtocolMessageType('ScanRequest', (_message.Message,), {
  'DESCRIPTOR' : _SCANREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.ScanRequest)
  })
_sym_db.RegisterMessage(ScanRequest)

KeyPrefix = _reflection.GeneratedProtocolMessageType('KeyPrefix', (_message.Message,), {
  'DESCRIPTOR' : _KEYPREFIX,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.KeyPrefix)
  })
_sym_db.RegisterMessage(KeyPrefix)

EntryCount = _reflection.GeneratedProtocolMessageType('EntryCount', (_message.Message,), {
  'DESCRIPTOR' : _ENTRYCOUNT,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.EntryCount)
  })
_sym_db.RegisterMessage(EntryCount)

Signature = _reflection.GeneratedProtocolMessageType('Signature', (_message.Message,), {
  'DESCRIPTOR' : _SIGNATURE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.Signature)
  })
_sym_db.RegisterMessage(Signature)

TxHeader = _reflection.GeneratedProtocolMessageType('TxHeader', (_message.Message,), {
  'DESCRIPTOR' : _TXHEADER,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.TxHeader)
  })
_sym_db.RegisterMessage(TxHeader)

TxMetadata = _reflection.GeneratedProtocolMessageType('TxMetadata', (_message.Message,), {
  'DESCRIPTOR' : _TXMETADATA,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.TxMetadata)
  })
_sym_db.RegisterMessage(TxMetadata)

LinearProof = _reflection.GeneratedProtocolMessageType('LinearProof', (_message.Message,), {
  'DESCRIPTOR' : _LINEARPROOF,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.LinearProof)
  })
_sym_db.RegisterMessage(LinearProof)

DualProof = _reflection.GeneratedProtocolMessageType('DualProof', (_message.Message,), {
  'DESCRIPTOR' : _DUALPROOF,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.DualProof)
  })
_sym_db.RegisterMessage(DualProof)

Tx = _reflection.GeneratedProtocolMessageType('Tx', (_message.Message,), {
  'DESCRIPTOR' : _TX,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.Tx)
  })
_sym_db.RegisterMessage(Tx)

TxEntry = _reflection.GeneratedProtocolMessageType('TxEntry', (_message.Message,), {
  'DESCRIPTOR' : _TXENTRY,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.TxEntry)
  })
_sym_db.RegisterMessage(TxEntry)

KVMetadata = _reflection.GeneratedProtocolMessageType('KVMetadata', (_message.Message,), {
  'DESCRIPTOR' : _KVMETADATA,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.KVMetadata)
  })
_sym_db.RegisterMessage(KVMetadata)

Expiration = _reflection.GeneratedProtocolMessageType('Expiration', (_message.Message,), {
  'DESCRIPTOR' : _EXPIRATION,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.Expiration)
  })
_sym_db.RegisterMessage(Expiration)

VerifiableTx = _reflection.GeneratedProtocolMessageType('VerifiableTx', (_message.Message,), {
  'DESCRIPTOR' : _VERIFIABLETX,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.VerifiableTx)
  })
_sym_db.RegisterMessage(VerifiableTx)

VerifiableEntry = _reflection.GeneratedProtocolMessageType('VerifiableEntry', (_message.Message,), {
  'DESCRIPTOR' : _VERIFIABLEENTRY,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.VerifiableEntry)
  })
_sym_db.RegisterMessage(VerifiableEntry)

InclusionProof = _reflection.GeneratedProtocolMessageType('InclusionProof', (_message.Message,), {
  'DESCRIPTOR' : _INCLUSIONPROOF,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.InclusionProof)
  })
_sym_db.RegisterMessage(InclusionProof)

SetRequest = _reflection.GeneratedProtocolMessageType('SetRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.SetRequest)
  })
_sym_db.RegisterMessage(SetRequest)

KeyRequest = _reflection.GeneratedProtocolMessageType('KeyRequest', (_message.Message,), {
  'DESCRIPTOR' : _KEYREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.KeyRequest)
  })
_sym_db.RegisterMessage(KeyRequest)

KeyListRequest = _reflection.GeneratedProtocolMessageType('KeyListRequest', (_message.Message,), {
  'DESCRIPTOR' : _KEYLISTREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.KeyListRequest)
  })
_sym_db.RegisterMessage(KeyListRequest)

DeleteKeysRequest = _reflection.GeneratedProtocolMessageType('DeleteKeysRequest', (_message.Message,), {
  'DESCRIPTOR' : _DELETEKEYSREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.DeleteKeysRequest)
  })
_sym_db.RegisterMessage(DeleteKeysRequest)

VerifiableSetRequest = _reflection.GeneratedProtocolMessageType('VerifiableSetRequest', (_message.Message,), {
  'DESCRIPTOR' : _VERIFIABLESETREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.VerifiableSetRequest)
  })
_sym_db.RegisterMessage(VerifiableSetRequest)

VerifiableGetRequest = _reflection.GeneratedProtocolMessageType('VerifiableGetRequest', (_message.Message,), {
  'DESCRIPTOR' : _VERIFIABLEGETREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.VerifiableGetRequest)
  })
_sym_db.RegisterMessage(VerifiableGetRequest)

ServerInfoRequest = _reflection.GeneratedProtocolMessageType('ServerInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _SERVERINFOREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.ServerInfoRequest)
  })
_sym_db.RegisterMessage(ServerInfoRequest)

ServerInfoResponse = _reflection.GeneratedProtocolMessageType('ServerInfoResponse', (_message.Message,), {
  'DESCRIPTOR' : _SERVERINFORESPONSE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.ServerInfoResponse)
  })
_sym_db.RegisterMessage(ServerInfoResponse)

HealthResponse = _reflection.GeneratedProtocolMessageType('HealthResponse', (_message.Message,), {
  'DESCRIPTOR' : _HEALTHRESPONSE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.HealthResponse)
  })
_sym_db.RegisterMessage(HealthResponse)

DatabaseHealthResponse = _reflection.GeneratedProtocolMessageType('DatabaseHealthResponse', (_message.Message,), {
  'DESCRIPTOR' : _DATABASEHEALTHRESPONSE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.DatabaseHealthResponse)
  })
_sym_db.RegisterMessage(DatabaseHealthResponse)

ImmutableState = _reflection.GeneratedProtocolMessageType('ImmutableState', (_message.Message,), {
  'DESCRIPTOR' : _IMMUTABLESTATE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.ImmutableState)
  })
_sym_db.RegisterMessage(ImmutableState)

ReferenceRequest = _reflection.GeneratedProtocolMessageType('ReferenceRequest', (_message.Message,), {
  'DESCRIPTOR' : _REFERENCEREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.ReferenceRequest)
  })
_sym_db.RegisterMessage(ReferenceRequest)

VerifiableReferenceRequest = _reflection.GeneratedProtocolMessageType('VerifiableReferenceRequest', (_message.Message,), {
  'DESCRIPTOR' : _VERIFIABLEREFERENCEREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.VerifiableReferenceRequest)
  })
_sym_db.RegisterMessage(VerifiableReferenceRequest)

ZAddRequest = _reflection.GeneratedProtocolMessageType('ZAddRequest', (_message.Message,), {
  'DESCRIPTOR' : _ZADDREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.ZAddRequest)
  })
_sym_db.RegisterMessage(ZAddRequest)

Score = _reflection.GeneratedProtocolMessageType('Score', (_message.Message,), {
  'DESCRIPTOR' : _SCORE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.Score)
  })
_sym_db.RegisterMessage(Score)

ZScanRequest = _reflection.GeneratedProtocolMessageType('ZScanRequest', (_message.Message,), {
  'DESCRIPTOR' : _ZSCANREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.ZScanRequest)
  })
_sym_db.RegisterMessage(ZScanRequest)

HistoryRequest = _reflection.GeneratedProtocolMessageType('HistoryRequest', (_message.Message,), {
  'DESCRIPTOR' : _HISTORYREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.HistoryRequest)
  })
_sym_db.RegisterMessage(HistoryRequest)

VerifiableZAddRequest = _reflection.GeneratedProtocolMessageType('VerifiableZAddRequest', (_message.Message,), {
  'DESCRIPTOR' : _VERIFIABLEZADDREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.VerifiableZAddRequest)
  })
_sym_db.RegisterMessage(VerifiableZAddRequest)

TxRequest = _reflection.GeneratedProtocolMessageType('TxRequest', (_message.Message,), {
  'DESCRIPTOR' : _TXREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.TxRequest)
  })
_sym_db.RegisterMessage(TxRequest)

EntriesSpec = _reflection.GeneratedProtocolMessageType('EntriesSpec', (_message.Message,), {
  'DESCRIPTOR' : _ENTRIESSPEC,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.EntriesSpec)
  })
_sym_db.RegisterMessage(EntriesSpec)

EntryTypeSpec = _reflection.GeneratedProtocolMessageType('EntryTypeSpec', (_message.Message,), {
  'DESCRIPTOR' : _ENTRYTYPESPEC,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.EntryTypeSpec)
  })
_sym_db.RegisterMessage(EntryTypeSpec)

VerifiableTxRequest = _reflection.GeneratedProtocolMessageType('VerifiableTxRequest', (_message.Message,), {
  'DESCRIPTOR' : _VERIFIABLETXREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.VerifiableTxRequest)
  })
_sym_db.RegisterMessage(VerifiableTxRequest)

TxScanRequest = _reflection.GeneratedProtocolMessageType('TxScanRequest', (_message.Message,), {
  'DESCRIPTOR' : _TXSCANREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.TxScanRequest)
  })
_sym_db.RegisterMessage(TxScanRequest)

TxList = _reflection.GeneratedProtocolMessageType('TxList', (_message.Message,), {
  'DESCRIPTOR' : _TXLIST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.TxList)
  })
_sym_db.RegisterMessage(TxList)

ExportTxRequest = _reflection.GeneratedProtocolMessageType('ExportTxRequest', (_message.Message,), {
  'DESCRIPTOR' : _EXPORTTXREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.ExportTxRequest)
  })
_sym_db.RegisterMessage(ExportTxRequest)

Database = _reflection.GeneratedProtocolMessageType('Database', (_message.Message,), {
  'DESCRIPTOR' : _DATABASE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.Database)
  })
_sym_db.RegisterMessage(Database)

DatabaseSettings = _reflection.GeneratedProtocolMessageType('DatabaseSettings', (_message.Message,), {
  'DESCRIPTOR' : _DATABASESETTINGS,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.DatabaseSettings)
  })
_sym_db.RegisterMessage(DatabaseSettings)

CreateDatabaseRequest = _reflection.GeneratedProtocolMessageType('CreateDatabaseRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATEDATABASEREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.CreateDatabaseRequest)
  })
_sym_db.RegisterMessage(CreateDatabaseRequest)

CreateDatabaseResponse = _reflection.GeneratedProtocolMessageType('CreateDatabaseResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATEDATABASERESPONSE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.CreateDatabaseResponse)
  })
_sym_db.RegisterMessage(CreateDatabaseResponse)

UpdateDatabaseRequest = _reflection.GeneratedProtocolMessageType('UpdateDatabaseRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEDATABASEREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.UpdateDatabaseRequest)
  })
_sym_db.RegisterMessage(UpdateDatabaseRequest)

UpdateDatabaseResponse = _reflection.GeneratedProtocolMessageType('UpdateDatabaseResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEDATABASERESPONSE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.UpdateDatabaseResponse)
  })
_sym_db.RegisterMessage(UpdateDatabaseResponse)

DatabaseSettingsRequest = _reflection.GeneratedProtocolMessageType('DatabaseSettingsRequest', (_message.Message,), {
  'DESCRIPTOR' : _DATABASESETTINGSREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.DatabaseSettingsRequest)
  })
_sym_db.RegisterMessage(DatabaseSettingsRequest)

DatabaseSettingsResponse = _reflection.GeneratedProtocolMessageType('DatabaseSettingsResponse', (_message.Message,), {
  'DESCRIPTOR' : _DATABASESETTINGSRESPONSE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.DatabaseSettingsResponse)
  })
_sym_db.RegisterMessage(DatabaseSettingsResponse)

NullableUint32 = _reflection.GeneratedProtocolMessageType('NullableUint32', (_message.Message,), {
  'DESCRIPTOR' : _NULLABLEUINT32,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.NullableUint32)
  })
_sym_db.RegisterMessage(NullableUint32)

NullableUint64 = _reflection.GeneratedProtocolMessageType('NullableUint64', (_message.Message,), {
  'DESCRIPTOR' : _NULLABLEUINT64,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.NullableUint64)
  })
_sym_db.RegisterMessage(NullableUint64)

NullableFloat = _reflection.GeneratedProtocolMessageType('NullableFloat', (_message.Message,), {
  'DESCRIPTOR' : _NULLABLEFLOAT,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.NullableFloat)
  })
_sym_db.RegisterMessage(NullableFloat)

NullableBool = _reflection.GeneratedProtocolMessageType('NullableBool', (_message.Message,), {
  'DESCRIPTOR' : _NULLABLEBOOL,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.NullableBool)
  })
_sym_db.RegisterMessage(NullableBool)

NullableString = _reflection.GeneratedProtocolMessageType('NullableString', (_message.Message,), {
  'DESCRIPTOR' : _NULLABLESTRING,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.NullableString)
  })
_sym_db.RegisterMessage(NullableString)

NullableMilliseconds = _reflection.GeneratedProtocolMessageType('NullableMilliseconds', (_message.Message,), {
  'DESCRIPTOR' : _NULLABLEMILLISECONDS,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.NullableMilliseconds)
  })
_sym_db.RegisterMessage(NullableMilliseconds)

DatabaseNullableSettings = _reflection.GeneratedProtocolMessageType('DatabaseNullableSettings', (_message.Message,), {
  'DESCRIPTOR' : _DATABASENULLABLESETTINGS,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.DatabaseNullableSettings)
  })
_sym_db.RegisterMessage(DatabaseNullableSettings)

ReplicationNullableSettings = _reflection.GeneratedProtocolMessageType('ReplicationNullableSettings', (_message.Message,), {
  'DESCRIPTOR' : _REPLICATIONNULLABLESETTINGS,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.ReplicationNullableSettings)
  })
_sym_db.RegisterMessage(ReplicationNullableSettings)

IndexNullableSettings = _reflection.GeneratedProtocolMessageType('IndexNullableSettings', (_message.Message,), {
  'DESCRIPTOR' : _INDEXNULLABLESETTINGS,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.IndexNullableSettings)
  })
_sym_db.RegisterMessage(IndexNullableSettings)

AHTNullableSettings = _reflection.GeneratedProtocolMessageType('AHTNullableSettings', (_message.Message,), {
  'DESCRIPTOR' : _AHTNULLABLESETTINGS,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.AHTNullableSettings)
  })
_sym_db.RegisterMessage(AHTNullableSettings)

LoadDatabaseRequest = _reflection.GeneratedProtocolMessageType('LoadDatabaseRequest', (_message.Message,), {
  'DESCRIPTOR' : _LOADDATABASEREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.LoadDatabaseRequest)
  })
_sym_db.RegisterMessage(LoadDatabaseRequest)

LoadDatabaseResponse = _reflection.GeneratedProtocolMessageType('LoadDatabaseResponse', (_message.Message,), {
  'DESCRIPTOR' : _LOADDATABASERESPONSE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.LoadDatabaseResponse)
  })
_sym_db.RegisterMessage(LoadDatabaseResponse)

UnloadDatabaseRequest = _reflection.GeneratedProtocolMessageType('UnloadDatabaseRequest', (_message.Message,), {
  'DESCRIPTOR' : _UNLOADDATABASEREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.UnloadDatabaseRequest)
  })
_sym_db.RegisterMessage(UnloadDatabaseRequest)

UnloadDatabaseResponse = _reflection.GeneratedProtocolMessageType('UnloadDatabaseResponse', (_message.Message,), {
  'DESCRIPTOR' : _UNLOADDATABASERESPONSE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.UnloadDatabaseResponse)
  })
_sym_db.RegisterMessage(UnloadDatabaseResponse)

DeleteDatabaseRequest = _reflection.GeneratedProtocolMessageType('DeleteDatabaseRequest', (_message.Message,), {
  'DESCRIPTOR' : _DELETEDATABASEREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.DeleteDatabaseRequest)
  })
_sym_db.RegisterMessage(DeleteDatabaseRequest)

DeleteDatabaseResponse = _reflection.GeneratedProtocolMessageType('DeleteDatabaseResponse', (_message.Message,), {
  'DESCRIPTOR' : _DELETEDATABASERESPONSE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.DeleteDatabaseResponse)
  })
_sym_db.RegisterMessage(DeleteDatabaseResponse)

FlushIndexRequest = _reflection.GeneratedProtocolMessageType('FlushIndexRequest', (_message.Message,), {
  'DESCRIPTOR' : _FLUSHINDEXREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.FlushIndexRequest)
  })
_sym_db.RegisterMessage(FlushIndexRequest)

FlushIndexResponse = _reflection.GeneratedProtocolMessageType('FlushIndexResponse', (_message.Message,), {
  'DESCRIPTOR' : _FLUSHINDEXRESPONSE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.FlushIndexResponse)
  })
_sym_db.RegisterMessage(FlushIndexResponse)

Table = _reflection.GeneratedProtocolMessageType('Table', (_message.Message,), {
  'DESCRIPTOR' : _TABLE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.Table)
  })
_sym_db.RegisterMessage(Table)

SQLGetRequest = _reflection.GeneratedProtocolMessageType('SQLGetRequest', (_message.Message,), {
  'DESCRIPTOR' : _SQLGETREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.SQLGetRequest)
  })
_sym_db.RegisterMessage(SQLGetRequest)

VerifiableSQLGetRequest = _reflection.GeneratedProtocolMessageType('VerifiableSQLGetRequest', (_message.Message,), {
  'DESCRIPTOR' : _VERIFIABLESQLGETREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.VerifiableSQLGetRequest)
  })
_sym_db.RegisterMessage(VerifiableSQLGetRequest)

SQLEntry = _reflection.GeneratedProtocolMessageType('SQLEntry', (_message.Message,), {
  'DESCRIPTOR' : _SQLENTRY,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.SQLEntry)
  })
_sym_db.RegisterMessage(SQLEntry)

VerifiableSQLEntry = _reflection.GeneratedProtocolMessageType('VerifiableSQLEntry', (_message.Message,), {

  'ColNamesByIdEntry' : _reflection.GeneratedProtocolMessageType('ColNamesByIdEntry', (_message.Message,), {
    'DESCRIPTOR' : _VERIFIABLESQLENTRY_COLNAMESBYIDENTRY,
    '__module__' : 'schema_pb2'
    # @@protoc_insertion_point(class_scope:immudb.schema.VerifiableSQLEntry.ColNamesByIdEntry)
    })
  ,

  'ColIdsByNameEntry' : _reflection.GeneratedProtocolMessageType('ColIdsByNameEntry', (_message.Message,), {
    'DESCRIPTOR' : _VERIFIABLESQLENTRY_COLIDSBYNAMEENTRY,
    '__module__' : 'schema_pb2'
    # @@protoc_insertion_point(class_scope:immudb.schema.VerifiableSQLEntry.ColIdsByNameEntry)
    })
  ,

  'ColTypesByIdEntry' : _reflection.GeneratedProtocolMessageType('ColTypesByIdEntry', (_message.Message,), {
    'DESCRIPTOR' : _VERIFIABLESQLENTRY_COLTYPESBYIDENTRY,
    '__module__' : 'schema_pb2'
    # @@protoc_insertion_point(class_scope:immudb.schema.VerifiableSQLEntry.ColTypesByIdEntry)
    })
  ,

  'ColLenByIdEntry' : _reflection.GeneratedProtocolMessageType('ColLenByIdEntry', (_message.Message,), {
    'DESCRIPTOR' : _VERIFIABLESQLENTRY_COLLENBYIDENTRY,
    '__module__' : 'schema_pb2'
    # @@protoc_insertion_point(class_scope:immudb.schema.VerifiableSQLEntry.ColLenByIdEntry)
    })
  ,
  'DESCRIPTOR' : _VERIFIABLESQLENTRY,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.VerifiableSQLEntry)
  })
_sym_db.RegisterMessage(VerifiableSQLEntry)
_sym_db.RegisterMessage(VerifiableSQLEntry.ColNamesByIdEntry)
_sym_db.RegisterMessage(VerifiableSQLEntry.ColIdsByNameEntry)
_sym_db.RegisterMessage(VerifiableSQLEntry.ColTypesByIdEntry)
_sym_db.RegisterMessage(VerifiableSQLEntry.ColLenByIdEntry)

UseDatabaseReply = _reflection.GeneratedProtocolMessageType('UseDatabaseReply', (_message.Message,), {
  'DESCRIPTOR' : _USEDATABASEREPLY,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.UseDatabaseReply)
  })
_sym_db.RegisterMessage(UseDatabaseReply)

ChangePermissionRequest = _reflection.GeneratedProtocolMessageType('ChangePermissionRequest', (_message.Message,), {
  'DESCRIPTOR' : _CHANGEPERMISSIONREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.ChangePermissionRequest)
  })
_sym_db.RegisterMessage(ChangePermissionRequest)

SetActiveUserRequest = _reflection.GeneratedProtocolMessageType('SetActiveUserRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETACTIVEUSERREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.SetActiveUserRequest)
  })
_sym_db.RegisterMessage(SetActiveUserRequest)

DatabaseListResponse = _reflection.GeneratedProtocolMessageType('DatabaseListResponse', (_message.Message,), {
  'DESCRIPTOR' : _DATABASELISTRESPONSE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.DatabaseListResponse)
  })
_sym_db.RegisterMessage(DatabaseListResponse)

DatabaseListRequestV2 = _reflection.GeneratedProtocolMessageType('DatabaseListRequestV2', (_message.Message,), {
  'DESCRIPTOR' : _DATABASELISTREQUESTV2,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.DatabaseListRequestV2)
  })
_sym_db.RegisterMessage(DatabaseListRequestV2)

DatabaseListResponseV2 = _reflection.GeneratedProtocolMessageType('DatabaseListResponseV2', (_message.Message,), {
  'DESCRIPTOR' : _DATABASELISTRESPONSEV2,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.DatabaseListResponseV2)
  })
_sym_db.RegisterMessage(DatabaseListResponseV2)

DatabaseWithSettings = _reflection.GeneratedProtocolMessageType('DatabaseWithSettings', (_message.Message,), {
  'DESCRIPTOR' : _DATABASEWITHSETTINGS,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.DatabaseWithSettings)
  })
_sym_db.RegisterMessage(DatabaseWithSettings)

Chunk = _reflection.GeneratedProtocolMessageType('Chunk', (_message.Message,), {
  'DESCRIPTOR' : _CHUNK,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.Chunk)
  })
_sym_db.RegisterMessage(Chunk)

UseSnapshotRequest = _reflection.GeneratedProtocolMessageType('UseSnapshotRequest', (_message.Message,), {
  'DESCRIPTOR' : _USESNAPSHOTREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.UseSnapshotRequest)
  })
_sym_db.RegisterMessage(UseSnapshotRequest)

SQLExecRequest = _reflection.GeneratedProtocolMessageType('SQLExecRequest', (_message.Message,), {
  'DESCRIPTOR' : _SQLEXECREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.SQLExecRequest)
  })
_sym_db.RegisterMessage(SQLExecRequest)

SQLQueryRequest = _reflection.GeneratedProtocolMessageType('SQLQueryRequest', (_message.Message,), {
  'DESCRIPTOR' : _SQLQUERYREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.SQLQueryRequest)
  })
_sym_db.RegisterMessage(SQLQueryRequest)

NamedParam = _reflection.GeneratedProtocolMessageType('NamedParam', (_message.Message,), {
  'DESCRIPTOR' : _NAMEDPARAM,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.NamedParam)
  })
_sym_db.RegisterMessage(NamedParam)

SQLExecResult = _reflection.GeneratedProtocolMessageType('SQLExecResult', (_message.Message,), {
  'DESCRIPTOR' : _SQLEXECRESULT,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.SQLExecResult)
  })
_sym_db.RegisterMessage(SQLExecResult)

CommittedSQLTx = _reflection.GeneratedProtocolMessageType('CommittedSQLTx', (_message.Message,), {

  'LastInsertedPKsEntry' : _reflection.GeneratedProtocolMessageType('LastInsertedPKsEntry', (_message.Message,), {
    'DESCRIPTOR' : _COMMITTEDSQLTX_LASTINSERTEDPKSENTRY,
    '__module__' : 'schema_pb2'
    # @@protoc_insertion_point(class_scope:immudb.schema.CommittedSQLTx.LastInsertedPKsEntry)
    })
  ,

  'FirstInsertedPKsEntry' : _reflection.GeneratedProtocolMessageType('FirstInsertedPKsEntry', (_message.Message,), {
    'DESCRIPTOR' : _COMMITTEDSQLTX_FIRSTINSERTEDPKSENTRY,
    '__module__' : 'schema_pb2'
    # @@protoc_insertion_point(class_scope:immudb.schema.CommittedSQLTx.FirstInsertedPKsEntry)
    })
  ,
  'DESCRIPTOR' : _COMMITTEDSQLTX,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.CommittedSQLTx)
  })
_sym_db.RegisterMessage(CommittedSQLTx)
_sym_db.RegisterMessage(CommittedSQLTx.LastInsertedPKsEntry)
_sym_db.RegisterMessage(CommittedSQLTx.FirstInsertedPKsEntry)

SQLQueryResult = _reflection.GeneratedProtocolMessageType('SQLQueryResult', (_message.Message,), {
  'DESCRIPTOR' : _SQLQUERYRESULT,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.SQLQueryResult)
  })
_sym_db.RegisterMessage(SQLQueryResult)

Column = _reflection.GeneratedProtocolMessageType('Column', (_message.Message,), {
  'DESCRIPTOR' : _COLUMN,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.Column)
  })
_sym_db.RegisterMessage(Column)

Row = _reflection.GeneratedProtocolMessageType('Row', (_message.Message,), {
  'DESCRIPTOR' : _ROW,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.Row)
  })
_sym_db.RegisterMessage(Row)

SQLValue = _reflection.GeneratedProtocolMessageType('SQLValue', (_message.Message,), {
  'DESCRIPTOR' : _SQLVALUE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.SQLValue)
  })
_sym_db.RegisterMessage(SQLValue)

NewTxRequest = _reflection.GeneratedProtocolMessageType('NewTxRequest', (_message.Message,), {
  'DESCRIPTOR' : _NEWTXREQUEST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.NewTxRequest)
  })
_sym_db.RegisterMessage(NewTxRequest)

NewTxResponse = _reflection.GeneratedProtocolMessageType('NewTxResponse', (_message.Message,), {
  'DESCRIPTOR' : _NEWTXRESPONSE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.NewTxResponse)
  })
_sym_db.RegisterMessage(NewTxResponse)

ErrorInfo = _reflection.GeneratedProtocolMessageType('ErrorInfo', (_message.Message,), {
  'DESCRIPTOR' : _ERRORINFO,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.ErrorInfo)
  })
_sym_db.RegisterMessage(ErrorInfo)

DebugInfo = _reflection.GeneratedProtocolMessageType('DebugInfo', (_message.Message,), {
  'DESCRIPTOR' : _DEBUGINFO,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.DebugInfo)
  })
_sym_db.RegisterMessage(DebugInfo)

RetryInfo = _reflection.GeneratedProtocolMessageType('RetryInfo', (_message.Message,), {
  'DESCRIPTOR' : _RETRYINFO,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:immudb.schema.RetryInfo)
  })
_sym_db.RegisterMessage(RetryInfo)

_IMMUSERVICE = DESCRIPTOR.services_by_name['ImmuService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z+github.com/codenotary/immudb/pkg/api/schema'
  _VERIFIABLESQLENTRY_COLNAMESBYIDENTRY._options = None
  _VERIFIABLESQLENTRY_COLNAMESBYIDENTRY._serialized_options = b'8\001'
  _VERIFIABLESQLENTRY_COLIDSBYNAMEENTRY._options = None
  _VERIFIABLESQLENTRY_COLIDSBYNAMEENTRY._serialized_options = b'8\001'
  _VERIFIABLESQLENTRY_COLTYPESBYIDENTRY._options = None
  _VERIFIABLESQLENTRY_COLTYPESBYIDENTRY._serialized_options = b'8\001'
  _VERIFIABLESQLENTRY_COLLENBYIDENTRY._options = None
  _VERIFIABLESQLENTRY_COLLENBYIDENTRY._serialized_options = b'8\001'
  _COMMITTEDSQLTX_LASTINSERTEDPKSENTRY._options = None
  _COMMITTEDSQLTX_LASTINSERTEDPKSENTRY._serialized_options = b'8\001'
  _COMMITTEDSQLTX_FIRSTINSERTEDPKSENTRY._options = None
  _COMMITTEDSQLTX_FIRSTINSERTEDPKSENTRY._serialized_options = b'8\001'
  _IMMUSERVICE.methods_by_name['ListUsers']._options = None
  _IMMUSERVICE.methods_by_name['ListUsers']._serialized_options = b'\202\323\344\223\002\014\022\n/user/list'
  _IMMUSERVICE.methods_by_name['CreateUser']._options = None
  _IMMUSERVICE.methods_by_name['CreateUser']._serialized_options = b'\202\323\344\223\002\n\"\005/user:\001*'
  _IMMUSERVICE.methods_by_name['ChangePassword']._options = None
  _IMMUSERVICE.methods_by_name['ChangePassword']._serialized_options = b'\202\323\344\223\002\032\"\025/user/password/change:\001*'
  _IMMUSERVICE.methods_by_name['ChangePermission']._options = None
  _IMMUSERVICE.methods_by_name['ChangePermission']._serialized_options = b'\202\323\344\223\002\033\"\026/user/changepermission:\001*'
  _IMMUSERVICE.methods_by_name['SetActiveUser']._options = None
  _IMMUSERVICE.methods_by_name['SetActiveUser']._serialized_options = b'\202\323\344\223\002\030\"\023/user/setactiveUser:\001*'
  _IMMUSERVICE.methods_by_name['UpdateAuthConfig']._options = None
  _IMMUSERVICE.methods_by_name['UpdateAuthConfig']._serialized_options = b'\210\002\001'
  _IMMUSERVICE.methods_by_name['UpdateMTLSConfig']._options = None
  _IMMUSERVICE.methods_by_name['UpdateMTLSConfig']._serialized_options = b'\210\002\001'
  _IMMUSERVICE.methods_by_name['Login']._options = None
  _IMMUSERVICE.methods_by_name['Login']._serialized_options = b'\210\002\001\202\323\344\223\002\013\"\006/login:\001*'
  _IMMUSERVICE.methods_by_name['Logout']._options = None
  _IMMUSERVICE.methods_by_name['Logout']._serialized_options = b'\210\002\001\202\323\344\223\002\014\"\007/logout:\001*'
  _IMMUSERVICE.methods_by_name['Set']._options = None
  _IMMUSERVICE.methods_by_name['Set']._serialized_options = b'\202\323\344\223\002\014\"\007/db/set:\001*'
  _IMMUSERVICE.methods_by_name['VerifiableSet']._options = None
  _IMMUSERVICE.methods_by_name['VerifiableSet']._serialized_options = b'\202\323\344\223\002\027\"\022/db/verifiable/set:\001*'
  _IMMUSERVICE.methods_by_name['Get']._options = None
  _IMMUSERVICE.methods_by_name['Get']._serialized_options = b'\202\323\344\223\002\017\022\r/db/get/{key}'
  _IMMUSERVICE.methods_by_name['VerifiableGet']._options = None
  _IMMUSERVICE.methods_by_name['VerifiableGet']._serialized_options = b'\202\323\344\223\002\027\"\022/db/verifiable/get:\001*'
  _IMMUSERVICE.methods_by_name['Delete']._options = None
  _IMMUSERVICE.methods_by_name['Delete']._serialized_options = b'\202\323\344\223\002\017\"\n/db/delete:\001*'
  _IMMUSERVICE.methods_by_name['GetAll']._options = None
  _IMMUSERVICE.methods_by_name['GetAll']._serialized_options = b'\202\323\344\223\002\017\"\n/db/getall:\001*'
  _IMMUSERVICE.methods_by_name['ExecAll']._options = None
  _IMMUSERVICE.methods_by_name['ExecAll']._serialized_options = b'\202\323\344\223\002\020\"\013/db/execall:\001*'
  _IMMUSERVICE.methods_by_name['Scan']._options = None
  _IMMUSERVICE.methods_by_name['Scan']._serialized_options = b'\202\323\344\223\002\r\"\010/db/scan:\001*'
  _IMMUSERVICE.methods_by_name['Count']._options = None
  _IMMUSERVICE.methods_by_name['Count']._serialized_options = b'\202\323\344\223\002\024\022\022/db/count/{prefix}'
  _IMMUSERVICE.methods_by_name['CountAll']._options = None
  _IMMUSERVICE.methods_by_name['CountAll']._serialized_options = b'\202\323\344\223\002\016\022\014/db/countall'
  _IMMUSERVICE.methods_by_name['TxById']._options = None
  _IMMUSERVICE.methods_by_name['TxById']._serialized_options = b'\202\323\344\223\002\r\022\013/db/tx/{tx}'
  _IMMUSERVICE.methods_by_name['VerifiableTxById']._options = None
  _IMMUSERVICE.methods_by_name['VerifiableTxById']._serialized_options = b'\202\323\344\223\002\030\022\026/db/verifiable/tx/{tx}'
  _IMMUSERVICE.methods_by_name['TxScan']._options = None
  _IMMUSERVICE.methods_by_name['TxScan']._serialized_options = b'\202\323\344\223\002\013\"\006/db/tx:\001*'
  _IMMUSERVICE.methods_by_name['History']._options = None
  _IMMUSERVICE.methods_by_name['History']._serialized_options = b'\202\323\344\223\002\020\"\013/db/history:\001*'
  _IMMUSERVICE.methods_by_name['ServerInfo']._options = None
  _IMMUSERVICE.methods_by_name['ServerInfo']._serialized_options = b'\202\323\344\223\002\r\022\013/serverinfo'
  _IMMUSERVICE.methods_by_name['Health']._options = None
  _IMMUSERVICE.methods_by_name['Health']._serialized_options = b'\202\323\344\223\002\t\022\007/health'
  _IMMUSERVICE.methods_by_name['DatabaseHealth']._options = None
  _IMMUSERVICE.methods_by_name['DatabaseHealth']._serialized_options = b'\202\323\344\223\002\014\022\n/db/health'
  _IMMUSERVICE.methods_by_name['CurrentState']._options = None
  _IMMUSERVICE.methods_by_name['CurrentState']._serialized_options = b'\202\323\344\223\002\013\022\t/db/state'
  _IMMUSERVICE.methods_by_name['SetReference']._options = None
  _IMMUSERVICE.methods_by_name['SetReference']._serialized_options = b'\202\323\344\223\002\025\"\020/db/setreference:\001*'
  _IMMUSERVICE.methods_by_name['VerifiableSetReference']._options = None
  _IMMUSERVICE.methods_by_name['VerifiableSetReference']._serialized_options = b'\202\323\344\223\002 \"\033/db/verifiable/setreference:\001*'
  _IMMUSERVICE.methods_by_name['ZAdd']._options = None
  _IMMUSERVICE.methods_by_name['ZAdd']._serialized_options = b'\202\323\344\223\002\r\"\010/db/zadd:\001*'
  _IMMUSERVICE.methods_by_name['VerifiableZAdd']._options = None
  _IMMUSERVICE.methods_by_name['VerifiableZAdd']._serialized_options = b'\202\323\344\223\002\030\"\023/db/verifiable/zadd:\001*'
  _IMMUSERVICE.methods_by_name['ZScan']._options = None
  _IMMUSERVICE.methods_by_name['ZScan']._serialized_options = b'\202\323\344\223\002\016\"\t/db/zscan:\001*'
  _IMMUSERVICE.methods_by_name['CreateDatabase']._options = None
  _IMMUSERVICE.methods_by_name['CreateDatabase']._serialized_options = b'\210\002\001\202\323\344\223\002\017\"\n/db/create:\001*'
  _IMMUSERVICE.methods_by_name['CreateDatabaseWith']._options = None
  _IMMUSERVICE.methods_by_name['CreateDatabaseWith']._serialized_options = b'\210\002\001\202\323\344\223\002\023\"\016/db/createwith:\001*'
  _IMMUSERVICE.methods_by_name['CreateDatabaseV2']._options = None
  _IMMUSERVICE.methods_by_name['CreateDatabaseV2']._serialized_options = b'\202\323\344\223\002\022\"\r/db/create/v2:\001*'
  _IMMUSERVICE.methods_by_name['LoadDatabase']._options = None
  _IMMUSERVICE.methods_by_name['LoadDatabase']._serialized_options = b'\202\323\344\223\002\r\"\010/db/load:\001*'
  _IMMUSERVICE.methods_by_name['UnloadDatabase']._options = None
  _IMMUSERVICE.methods_by_name['UnloadDatabase']._serialized_options = b'\202\323\344\223\002\017\"\n/db/unload:\001*'
  _IMMUSERVICE.methods_by_name['DeleteDatabase']._options = None
  _IMMUSERVICE.methods_by_name['DeleteDatabase']._serialized_options = b'\202\323\344\223\002\017\"\n/db/delete:\001*'
  _IMMUSERVICE.methods_by_name['DatabaseList']._options = None
  _IMMUSERVICE.methods_by_name['DatabaseList']._serialized_options = b'\210\002\001\202\323\344\223\002\r\"\010/db/list:\001*'
  _IMMUSERVICE.methods_by_name['DatabaseListV2']._options = None
  _IMMUSERVICE.methods_by_name['DatabaseListV2']._serialized_options = b'\202\323\344\223\002\020\"\013/db/list/v2:\001*'
  _IMMUSERVICE.methods_by_name['UseDatabase']._options = None
  _IMMUSERVICE.methods_by_name['UseDatabase']._serialized_options = b'\202\323\344\223\002\030\022\026/db/use/{databaseName}'
  _IMMUSERVICE.methods_by_name['UpdateDatabase']._options = None
  _IMMUSERVICE.methods_by_name['UpdateDatabase']._serialized_options = b'\210\002\001\202\323\344\223\002\017\"\n/db/update:\001*'
  _IMMUSERVICE.methods_by_name['UpdateDatabaseV2']._options = None
  _IMMUSERVICE.methods_by_name['UpdateDatabaseV2']._serialized_options = b'\202\323\344\223\002\022\"\r/db/update/v2:\001*'
  _IMMUSERVICE.methods_by_name['GetDatabaseSettings']._options = None
  _IMMUSERVICE.methods_by_name['GetDatabaseSettings']._serialized_options = b'\210\002\001\202\323\344\223\002\021\"\014/db/settings:\001*'
  _IMMUSERVICE.methods_by_name['GetDatabaseSettingsV2']._options = None
  _IMMUSERVICE.methods_by_name['GetDatabaseSettingsV2']._serialized_options = b'\202\323\344\223\002\024\"\017/db/settings/v2:\001*'
  _IMMUSERVICE.methods_by_name['FlushIndex']._options = None
  _IMMUSERVICE.methods_by_name['FlushIndex']._serialized_options = b'\202\323\344\223\002\020\022\016/db/flushindex'
  _IMMUSERVICE.methods_by_name['CompactIndex']._options = None
  _IMMUSERVICE.methods_by_name['CompactIndex']._serialized_options = b'\202\323\344\223\002\022\022\020/db/compactindex'
  _IMMUSERVICE.methods_by_name['SQLExec']._options = None
  _IMMUSERVICE.methods_by_name['SQLExec']._serialized_options = b'\202\323\344\223\002\020\"\013/db/sqlexec:\001*'
  _IMMUSERVICE.methods_by_name['SQLQuery']._options = None
  _IMMUSERVICE.methods_by_name['SQLQuery']._serialized_options = b'\202\323\344\223\002\021\"\014/db/sqlquery:\001*'
  _IMMUSERVICE.methods_by_name['ListTables']._options = None
  _IMMUSERVICE.methods_by_name['ListTables']._serialized_options = b'\202\323\344\223\002\020\022\016/db/table/list'
  _IMMUSERVICE.methods_by_name['DescribeTable']._options = None
  _IMMUSERVICE.methods_by_name['DescribeTable']._serialized_options = b'\202\323\344\223\002\017\"\n/db/tables:\001*'
  _IMMUSERVICE.methods_by_name['VerifiableSQLGet']._options = None
  _IMMUSERVICE.methods_by_name['VerifiableSQLGet']._serialized_options = b'\202\323\344\223\002\032\"\025/db/verifiable/sqlget:\001*'
  _ENTRYTYPEACTION._serialized_start=12968
  _ENTRYTYPEACTION._serialized_end=13043
  _PERMISSIONACTION._serialized_start=13045
  _PERMISSIONACTION._serialized_end=13086
  _TXMODE._serialized_start=13088
  _TXMODE._serialized_end=13140
  _KEY._serialized_start=120
  _KEY._serialized_end=138
  _PERMISSION._serialized_start=140
  _PERMISSION._serialized_end=190
  _USER._serialized_start=192
  _USER._serialized_end=314
  _USERLIST._serialized_start=316
  _USERLIST._serialized_end=362
  _CREATEUSERREQUEST._serialized_start=364
  _CREATEUSERREQUEST._serialized_end=453
  _USERREQUEST._serialized_start=455
  _USERREQUEST._serialized_end=482
  _CHANGEPASSWORDREQUEST._serialized_start=484
  _CHANGEPASSWORDREQUEST._serialized_end=563
  _LOGINREQUEST._serialized_start=565
  _LOGINREQUEST._serialized_end=611
  _LOGINRESPONSE._serialized_start=613
  _LOGINRESPONSE._serialized_end=660
  _AUTHCONFIG._serialized_start=662
  _AUTHCONFIG._serialized_end=688
  _MTLSCONFIG._serialized_start=690
  _MTLSCONFIG._serialized_end=719
  _OPENSESSIONREQUEST._serialized_start=721
  _OPENSESSIONREQUEST._serialized_end=799
  _OPENSESSIONRESPONSE._serialized_start=801
  _OPENSESSIONRESPONSE._serialized_end=861
  _PRECONDITION._serialized_start=864
  _PRECONDITION._serialized_end=1301
  _PRECONDITION_KEYMUSTEXISTPRECONDITION._serialized_start=1138
  _PRECONDITION_KEYMUSTEXISTPRECONDITION._serialized_end=1177
  _PRECONDITION_KEYMUSTNOTEXISTPRECONDITION._serialized_start=1179
  _PRECONDITION_KEYMUSTNOTEXISTPRECONDITION._serialized_end=1221
  _PRECONDITION_KEYNOTMODIFIEDAFTERTXPRECONDITION._serialized_start=1223
  _PRECONDITION_KEYNOTMODIFIEDAFTERTXPRECONDITION._serialized_end=1285
  _KEYVALUE._serialized_start=1303
  _KEYVALUE._serialized_end=1386
  _ENTRY._serialized_start=1389
  _ENTRY._serialized_end=1564
  _REFERENCE._serialized_start=1566
  _REFERENCE._serialized_end=1679
  _OP._serialized_start=1682
  _OP._serialized_end=1830
  _EXECALLREQUEST._serialized_start=1832
  _EXECALLREQUEST._serialized_end=1955
  _ENTRIES._serialized_start=1957
  _ENTRIES._serialized_end=2005
  _ZENTRY._serialized_start=2007
  _ZENTRY._serialized_end=2107
  _ZENTRIES._serialized_start=2109
  _ZENTRIES._serialized_end=2159
  _SCANREQUEST._serialized_start=2162
  _SCANREQUEST._serialized_end=2347
  _KEYPREFIX._serialized_start=2349
  _KEYPREFIX._serialized_end=2376
  _ENTRYCOUNT._serialized_start=2378
  _ENTRYCOUNT._serialized_end=2405
  _SIGNATURE._serialized_start=2407
  _SIGNATURE._serialized_end=2456
  _TXHEADER._serialized_start=2459
  _TXHEADER._serialized_end=2634
  _TXMETADATA._serialized_start=2636
  _TXMETADATA._serialized_end=2648
  _LINEARPROOF._serialized_start=2650
  _LINEARPROOF._serialized_end=2718
  _DUALPROOF._serialized_start=2721
  _DUALPROOF._serialized_end=2980
  _TX._serialized_start=2983
  _TX._serialized_end=3151
  _TXENTRY._serialized_start=3153
  _TXENTRY._serialized_end=3265
  _KVMETADATA._serialized_start=3267
  _KVMETADATA._serialized_end=3365
  _EXPIRATION._serialized_start=3367
  _EXPIRATION._serialized_end=3398
  _VERIFIABLETX._serialized_start=3401
  _VERIFIABLETX._serialized_end=3536
  _VERIFIABLEENTRY._serialized_start=3539
  _VERIFIABLEENTRY._serialized_end=3699
  _INCLUSIONPROOF._serialized_start=3701
  _INCLUSIONPROOF._serialized_end=3761
  _SETREQUEST._serialized_start=3763
  _SETREQUEST._serialized_end=3881
  _KEYREQUEST._serialized_start=3883
  _KEYREQUEST._serialized_end=3975
  _KEYLISTREQUEST._serialized_start=3977
  _KEYLISTREQUEST._serialized_end=4024
  _DELETEKEYSREQUEST._serialized_start=4026
  _DELETEKEYSREQUEST._serialized_end=4092
  _VERIFIABLESETREQUEST._serialized_start=4094
  _VERIFIABLESETREQUEST._serialized_end=4185
  _VERIFIABLEGETREQUEST._serialized_start=4187
  _VERIFIABLEGETREQUEST._serialized_end=4278
  _SERVERINFOREQUEST._serialized_start=4280
  _SERVERINFOREQUEST._serialized_end=4299
  _SERVERINFORESPONSE._serialized_start=4301
  _SERVERINFORESPONSE._serialized_end=4338
  _HEALTHRESPONSE._serialized_start=4340
  _HEALTHRESPONSE._serialized_end=4389
  _DATABASEHEALTHRESPONSE._serialized_start=4391
  _DATABASEHEALTHRESPONSE._serialized_end=4472
  _IMMUTABLESTATE._serialized_start=4474
  _IMMUTABLESTATE._serialized_end=4577
  _REFERENCEREQUEST._serialized_start=4580
  _REFERENCEREQUEST._serialized_end=4734
  _VERIFIABLEREFERENCEREQUEST._serialized_start=4736
  _VERIFIABLEREFERENCEREQUEST._serialized_end=4845
  _ZADDREQUEST._serialized_start=4847
  _ZADDREQUEST._serialized_end=4949
  _SCORE._serialized_start=4951
  _SCORE._serialized_end=4973
  _ZSCANREQUEST._serialized_start=4976
  _ZSCANREQUEST._serialized_end=5238
  _HISTORYREQUEST._serialized_start=5240
  _HISTORYREQUEST._serialized_end=5331
  _VERIFIABLEZADDREQUEST._serialized_start=5333
  _VERIFIABLEZADDREQUEST._serialized_end=5427
  _TXREQUEST._serialized_start=5430
  _TXREQUEST._serialized_end=5569
  _ENTRIESSPEC._serialized_start=5572
  _ENTRIESSPEC._serialized_end=5744
  _ENTRYTYPESPEC._serialized_start=5746
  _ENTRYTYPESPEC._serialized_end=5809
  _VERIFIABLETXREQUEST._serialized_start=5812
  _VERIFIABLETXREQUEST._serialized_end=5983
  _TXSCANREQUEST._serialized_start=5986
  _TXSCANREQUEST._serialized_end=6131
  _TXLIST._serialized_start=6133
  _TXLIST._serialized_end=6173
  _EXPORTTXREQUEST._serialized_start=6175
  _EXPORTTXREQUEST._serialized_end=6204
  _DATABASE._serialized_start=6206
  _DATABASE._serialized_end=6238
  _DATABASESETTINGS._serialized_start=6241
  _DATABASESETTINGS._serialized_end=6524
  _CREATEDATABASEREQUEST._serialized_start=6526
  _CREATEDATABASEREQUEST._serialized_end=6643
  _CREATEDATABASERESPONSE._serialized_start=6645
  _CREATEDATABASERESPONSE._serialized_end=6766
  _UPDATEDATABASEREQUEST._serialized_start=6768
  _UPDATEDATABASEREQUEST._serialized_end=6868
  _UPDATEDATABASERESPONSE._serialized_start=6870
  _UPDATEDATABASERESPONSE._serialized_end=6971
  _DATABASESETTINGSREQUEST._serialized_start=6973
  _DATABASESETTINGSREQUEST._serialized_end=6998
  _DATABASESETTINGSRESPONSE._serialized_start=7000
  _DATABASESETTINGSRESPONSE._serialized_end=7103
  _NULLABLEUINT32._serialized_start=7105
  _NULLABLEUINT32._serialized_end=7136
  _NULLABLEUINT64._serialized_start=7138
  _NULLABLEUINT64._serialized_end=7169
  _NULLABLEFLOAT._serialized_start=7171
  _NULLABLEFLOAT._serialized_end=7201
  _NULLABLEBOOL._serialized_start=7203
  _NULLABLEBOOL._serialized_end=7232
  _NULLABLESTRING._serialized_start=7234
  _NULLABLESTRING._serialized_end=7265
  _NULLABLEMILLISECONDS._serialized_start=7267
  _NULLABLEMILLISECONDS._serialized_end=7304
  _DATABASENULLABLESETTINGS._serialized_start=7307
  _DATABASENULLABLESETTINGS._serialized_end=8413
  _REPLICATIONNULLABLESETTINGS._serialized_start=8416
  _REPLICATIONNULLABLESETTINGS._serialized_end=8765
  _INDEXNULLABLESETTINGS._serialized_start=8768
  _INDEXNULLABLESETTINGS._serialized_end=9542
  _AHTNULLABLESETTINGS._serialized_start=9545
  _AHTNULLABLESETTINGS._serialized_end=9676
  _LOADDATABASEREQUEST._serialized_start=9678
  _LOADDATABASEREQUEST._serialized_end=9717
  _LOADDATABASERESPONSE._serialized_start=9719
  _LOADDATABASERESPONSE._serialized_end=9759
  _UNLOADDATABASEREQUEST._serialized_start=9761
  _UNLOADDATABASEREQUEST._serialized_end=9802
  _UNLOADDATABASERESPONSE._serialized_start=9804
  _UNLOADDATABASERESPONSE._serialized_end=9846
  _DELETEDATABASEREQUEST._serialized_start=9848
  _DELETEDATABASEREQUEST._serialized_end=9889
  _DELETEDATABASERESPONSE._serialized_start=9891
  _DELETEDATABASERESPONSE._serialized_end=9933
  _FLUSHINDEXREQUEST._serialized_start=9935
  _FLUSHINDEXREQUEST._serialized_end=9997
  _FLUSHINDEXRESPONSE._serialized_start=9999
  _FLUSHINDEXRESPONSE._serialized_end=10037
  _TABLE._serialized_start=10039
  _TABLE._serialized_end=10065
  _SQLGETREQUEST._serialized_start=10067
  _SQLGETREQUEST._serialized_end=10171
  _VERIFIABLESQLGETREQUEST._serialized_start=10173
  _VERIFIABLESQLGETREQUEST._serialized_end=10273
  _SQLENTRY._serialized_start=10275
  _SQLENTRY._serialized_end=10370
  _VERIFIABLESQLENTRY._serialized_start=10373
  _VERIFIABLESQLENTRY._serialized_end=11106
  _VERIFIABLESQLENTRY_COLNAMESBYIDENTRY._serialized_start=10892
  _VERIFIABLESQLENTRY_COLNAMESBYIDENTRY._serialized_end=10943
  _VERIFIABLESQLENTRY_COLIDSBYNAMEENTRY._serialized_start=10945
  _VERIFIABLESQLENTRY_COLIDSBYNAMEENTRY._serialized_end=10996
  _VERIFIABLESQLENTRY_COLTYPESBYIDENTRY._serialized_start=10998
  _VERIFIABLESQLENTRY_COLTYPESBYIDENTRY._serialized_end=11049
  _VERIFIABLESQLENTRY_COLLENBYIDENTRY._serialized_start=11051
  _VERIFIABLESQLENTRY_COLLENBYIDENTRY._serialized_end=11100
  _USEDATABASEREPLY._serialized_start=11108
  _USEDATABASEREPLY._serialized_end=11141
  _CHANGEPERMISSIONREQUEST._serialized_start=11144
  _CHANGEPERMISSIONREQUEST._serialized_end=11274
  _SETACTIVEUSERREQUEST._serialized_start=11276
  _SETACTIVEUSERREQUEST._serialized_end=11332
  _DATABASELISTRESPONSE._serialized_start=11334
  _DATABASELISTRESPONSE._serialized_end=11400
  _DATABASELISTREQUESTV2._serialized_start=11402
  _DATABASELISTREQUESTV2._serialized_end=11425
  _DATABASELISTRESPONSEV2._serialized_start=11427
  _DATABASELISTRESPONSEV2._serialized_end=11507
  _DATABASEWITHSETTINGS._serialized_start=11509
  _DATABASEWITHSETTINGS._serialized_end=11620
  _CHUNK._serialized_start=11622
  _CHUNK._serialized_end=11646
  _USESNAPSHOTREQUEST._serialized_start=11648
  _USESNAPSHOTREQUEST._serialized_end=11705
  _SQLEXECREQUEST._serialized_start=11707
  _SQLEXECREQUEST._serialized_end=11795
  _SQLQUERYREQUEST._serialized_start=11797
  _SQLQUERYREQUEST._serialized_end=11893
  _NAMEDPARAM._serialized_start=11895
  _NAMEDPARAM._serialized_end=11961
  _SQLEXECRESULT._serialized_start=11963
  _SQLEXECRESULT._serialized_end=12041
  _COMMITTEDSQLTX._serialized_start=12044
  _COMMITTEDSQLTX._serialized_end=12441
  _COMMITTEDSQLTX_LASTINSERTEDPKSENTRY._serialized_start=12280
  _COMMITTEDSQLTX_LASTINSERTEDPKSENTRY._serialized_end=12359
  _COMMITTEDSQLTX_FIRSTINSERTEDPKSENTRY._serialized_start=12361
  _COMMITTEDSQLTX_FIRSTINSERTEDPKSENTRY._serialized_end=12441
  _SQLQUERYRESULT._serialized_start=12443
  _SQLQUERYRESULT._serialized_end=12533
  _COLUMN._serialized_start=12535
  _COLUMN._serialized_end=12571
  _ROW._serialized_start=12573
  _ROW._serialized_end=12636
  _SQLVALUE._serialized_start=12639
  _SQLVALUE._serialized_end=12769
  _NEWTXREQUEST._serialized_start=12771
  _NEWTXREQUEST._serialized_end=12822
  _NEWTXRESPONSE._serialized_start=12824
  _NEWTXRESPONSE._serialized_end=12862
  _ERRORINFO._serialized_start=12864
  _ERRORINFO._serialized_end=12904
  _DEBUGINFO._serialized_start=12906
  _DEBUGINFO._serialized_end=12932
  _RETRYINFO._serialized_start=12934
  _RETRYINFO._serialized_end=12966
  _IMMUSERVICE._serialized_start=13143
  _IMMUSERVICE._serialized_end=19624
# @@protoc_insertion_point(module_scope)
